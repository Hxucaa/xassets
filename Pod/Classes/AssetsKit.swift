//
//  AssetsKit.swift
//  XAssets
//
//  Created by Connor Wang on 8/11/15.
//  Copyright (c) 2015 ZenChat. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class AssetsKit : NSObject {

    //// Cache

    private struct Cache {
        static var femaleIconFill: UIColor = UIColor(red: 1.000, green: 0.384, blue: 0.659, alpha: 1.000)
        static var maleIconFill: UIColor = UIColor(red: 0.157, green: 0.302, blue: 0.608, alpha: 1.000)
        static var iconUntapped: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static var themeColor: UIColor = UIColor(red: 0.000, green: 0.698, blue: 0.675, alpha: 1.000)
        static var flameColor: UIColor = UIColor(red: 0.973, green: 0.278, blue: 0.059, alpha: 1.000)
        static var carIconColor: UIColor = UIColor(red: 0.961, green: 0.651, blue: 0.137, alpha: 1.000)
        static var etcColor: UIColor = UIColor(red: 0.796, green: 0.796, blue: 0.796, alpha: 1.000)
        static var priceTagColor: UIColor = UIColor(red: 0.686, green: 0.686, blue: 0.686, alpha: 1.000)
        static var bottomBarButtonUntapped: UIColor = UIColor(red: 0.447, green: 0.447, blue: 0.447, alpha: 1.000)
        static var imageOfFemaleIcon: UIImage?
        static var femaleIconTargets: [AnyObject]?
        static var imageOfMaleIcon: UIImage?
        static var maleIconTargets: [AnyObject]?
        static var imageOfCakeIcon: UIImage?
        static var cakeIconTargets: [AnyObject]?
        static var imageOfCarIcon: UIImage?
        static var carIconTargets: [AnyObject]?
        static var imageOfEtcIcon: UIImage?
        static var etcIconTargets: [AnyObject]?
        static var imageOfWTGButtonTapped: UIImage?
        static var wTGButtonTappedTargets: [AnyObject]?
        static var imageOfWTGButtonUntapped: UIImage?
        static var wTGButtonUntappedTargets: [AnyObject]?
        static var imageOfPriceTagBackground: UIImage?
        static var priceTagBackgroundTargets: [AnyObject]?
        static var imageOfHomeButtonTapped: UIImage?
        static var homeButtonTappedTargets: [AnyObject]?
        static var imageOfHomeButtonUntapped: UIImage?
        static var homeButtonUntappedTargets: [AnyObject]?
        static var imageOfNearbyButtonTapped: UIImage?
        static var nearbyButtonTappedTargets: [AnyObject]?
        static var imageOfNearbyButtonUntapped: UIImage?
        static var nearbyButtonUntappedTargets: [AnyObject]?
        static var imageOfChatButtonTapped: UIImage?
        static var chatButtonTappedTargets: [AnyObject]?
        static var imageOfChatButtonUntapped: UIImage?
        static var chatButtonUntappedTargets: [AnyObject]?
        static var imageOfProfileButtonTapped: UIImage?
        static var profileButtonTappedTargets: [AnyObject]?
        static var imageOfProfileButtonUntapped: UIImage?
        static var profileButtonUntappedTargets: [AnyObject]?
        static var imageOfNavBarSearchButton: UIImage?
        static var navBarSearchButtonTargets: [AnyObject]?
        static var imageOfNavbarFilterButton: UIImage?
        static var navbarFilterButtonTargets: [AnyObject]?
    }

    //// Colors

    public class var femaleIconFill: UIColor { return Cache.femaleIconFill }
    public class var maleIconFill: UIColor { return Cache.maleIconFill }
    public class var iconUntapped: UIColor { return Cache.iconUntapped }
    public class var themeColor: UIColor { return Cache.themeColor }
    public class var flameColor: UIColor { return Cache.flameColor }
    public class var carIconColor: UIColor { return Cache.carIconColor }
    public class var etcColor: UIColor { return Cache.etcColor }
    public class var priceTagColor: UIColor { return Cache.priceTagColor }
    public class var bottomBarButtonUntapped: UIColor { return Cache.bottomBarButtonUntapped }

    //// Drawing Methods

    public class func drawFemaleIcon() {

        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(18.37, 3.68))
        bezierPath.addCurveToPoint(CGPointMake(14.33, 4.14), controlPoint1: CGPointMake(16.98, 3.68), controlPoint2: CGPointMake(15.63, 3.85))
        bezierPath.addCurveToPoint(CGPointMake(18.37, 0.7), controlPoint1: CGPointMake(14.55, 2.21), controlPoint2: CGPointMake(16.27, 0.7))
        bezierPath.addCurveToPoint(CGPointMake(22.42, 4.14), controlPoint1: CGPointMake(20.48, 0.7), controlPoint2: CGPointMake(22.2, 2.21))
        bezierPath.addCurveToPoint(CGPointMake(18.37, 3.68), controlPoint1: CGPointMake(21.12, 3.85), controlPoint2: CGPointMake(19.78, 3.68))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(18.37, 27.57))
        bezierPath.addCurveToPoint(CGPointMake(16.38, 28.32), controlPoint1: CGPointMake(17.27, 27.57), controlPoint2: CGPointMake(16.38, 27.9))
        bezierPath.addCurveToPoint(CGPointMake(18.37, 29.07), controlPoint1: CGPointMake(16.38, 28.73), controlPoint2: CGPointMake(17.27, 29.07))
        bezierPath.addCurveToPoint(CGPointMake(20.37, 28.32), controlPoint1: CGPointMake(19.48, 29.07), controlPoint2: CGPointMake(20.37, 28.73))
        bezierPath.addCurveToPoint(CGPointMake(18.37, 27.57), controlPoint1: CGPointMake(20.37, 27.9), controlPoint2: CGPointMake(19.48, 27.57))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(35.75, 26.34))
        bezierPath.addCurveToPoint(CGPointMake(32.19, 31.22), controlPoint1: CGPointMake(35.75, 28.61), controlPoint2: CGPointMake(34.26, 30.54))
        bezierPath.addCurveToPoint(CGPointMake(18.4, 39), controlPoint1: CGPointMake(29.54, 35.95), controlPoint2: CGPointMake(24.26, 39))
        bezierPath.addCurveToPoint(CGPointMake(4.63, 31.23), controlPoint1: CGPointMake(12.55, 39), controlPoint2: CGPointMake(7.28, 35.96))
        bezierPath.addCurveToPoint(CGPointMake(1, 26.34), controlPoint1: CGPointMake(2.53, 30.58), controlPoint2: CGPointMake(1, 28.63))
        bezierPath.addCurveToPoint(CGPointMake(2.74, 22.52), controlPoint1: CGPointMake(1, 24.82), controlPoint2: CGPointMake(1.68, 23.46))
        bezierPath.addCurveToPoint(CGPointMake(2.32, 19.25), controlPoint1: CGPointMake(2.48, 21.46), controlPoint2: CGPointMake(2.32, 20.37))
        bezierPath.addCurveToPoint(CGPointMake(18.37, 4.56), controlPoint1: CGPointMake(2.32, 11.15), controlPoint2: CGPointMake(9.53, 4.56))
        bezierPath.addCurveToPoint(CGPointMake(34.43, 19.25), controlPoint1: CGPointMake(27.23, 4.56), controlPoint2: CGPointMake(34.43, 11.15))
        bezierPath.addCurveToPoint(CGPointMake(34.01, 22.52), controlPoint1: CGPointMake(34.43, 20.37), controlPoint2: CGPointMake(34.28, 21.46))
        bezierPath.addCurveToPoint(CGPointMake(35.75, 26.34), controlPoint1: CGPointMake(35.08, 23.46), controlPoint2: CGPointMake(35.75, 24.82))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(32.36, 26.34))
        bezierPath.addCurveToPoint(CGPointMake(30.57, 24.41), controlPoint1: CGPointMake(32.36, 25.28), controlPoint2: CGPointMake(31.56, 24.41))
        bezierPath.addCurveToPoint(CGPointMake(29.63, 25.68), controlPoint1: CGPointMake(30.3, 24.85), controlPoint2: CGPointMake(29.98, 25.28))
        bezierPath.addCurveToPoint(CGPointMake(30.13, 22.61), controlPoint1: CGPointMake(29.94, 24.67), controlPoint2: CGPointMake(30.11, 23.64))
        bezierPath.addCurveToPoint(CGPointMake(22.68, 19.28), controlPoint1: CGPointMake(28.07, 22.59), controlPoint2: CGPointMake(25.23, 21.39))
        bezierPath.addCurveToPoint(CGPointMake(18.38, 13.54), controlPoint1: CGPointMake(20.45, 17.45), controlPoint2: CGPointMake(18.93, 15.32))
        bezierPath.addCurveToPoint(CGPointMake(14.08, 19.28), controlPoint1: CGPointMake(17.82, 15.32), controlPoint2: CGPointMake(16.31, 17.45))
        bezierPath.addCurveToPoint(CGPointMake(6.62, 22.61), controlPoint1: CGPointMake(11.52, 21.39), controlPoint2: CGPointMake(8.69, 22.59))
        bezierPath.addCurveToPoint(CGPointMake(7.13, 25.68), controlPoint1: CGPointMake(6.64, 23.64), controlPoint2: CGPointMake(6.81, 24.67))
        bezierPath.addCurveToPoint(CGPointMake(6.19, 24.41), controlPoint1: CGPointMake(6.77, 25.28), controlPoint2: CGPointMake(6.45, 24.85))
        bezierPath.addCurveToPoint(CGPointMake(4.39, 26.34), controlPoint1: CGPointMake(5.19, 24.41), controlPoint2: CGPointMake(4.39, 25.28))
        bezierPath.addCurveToPoint(CGPointMake(6.19, 28.27), controlPoint1: CGPointMake(4.39, 27.41), controlPoint2: CGPointMake(5.19, 28.27))
        bezierPath.addCurveToPoint(CGPointMake(6.89, 28.12), controlPoint1: CGPointMake(6.43, 28.27), controlPoint2: CGPointMake(6.67, 28.22))
        bezierPath.addCurveToPoint(CGPointMake(18.4, 35.8), controlPoint1: CGPointMake(8.51, 32.58), controlPoint2: CGPointMake(13.05, 35.8))
        bezierPath.addCurveToPoint(CGPointMake(29.91, 28.13), controlPoint1: CGPointMake(23.75, 35.8), controlPoint2: CGPointMake(28.29, 32.59))
        bezierPath.addCurveToPoint(CGPointMake(30.57, 28.27), controlPoint1: CGPointMake(30.12, 28.22), controlPoint2: CGPointMake(30.34, 28.27))
        bezierPath.addCurveToPoint(CGPointMake(32.36, 26.34), controlPoint1: CGPointMake(31.56, 28.27), controlPoint2: CGPointMake(32.36, 27.41))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(12.95, 21.98))
        bezierPath.addCurveToPoint(CGPointMake(11.13, 23.7), controlPoint1: CGPointMake(11.94, 21.98), controlPoint2: CGPointMake(11.13, 22.75))
        bezierPath.addCurveToPoint(CGPointMake(12.95, 25.42), controlPoint1: CGPointMake(11.13, 24.65), controlPoint2: CGPointMake(11.94, 25.42))
        bezierPath.addCurveToPoint(CGPointMake(14.77, 23.7), controlPoint1: CGPointMake(13.95, 25.42), controlPoint2: CGPointMake(14.77, 24.64))
        bezierPath.addCurveToPoint(CGPointMake(12.95, 21.98), controlPoint1: CGPointMake(14.77, 22.75), controlPoint2: CGPointMake(13.96, 21.98))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(23.8, 21.98))
        bezierPath.addCurveToPoint(CGPointMake(21.98, 23.7), controlPoint1: CGPointMake(22.8, 21.98), controlPoint2: CGPointMake(21.98, 22.75))
        bezierPath.addCurveToPoint(CGPointMake(23.8, 25.42), controlPoint1: CGPointMake(21.98, 24.65), controlPoint2: CGPointMake(22.8, 25.42))
        bezierPath.addCurveToPoint(CGPointMake(25.62, 23.7), controlPoint1: CGPointMake(24.81, 25.42), controlPoint2: CGPointMake(25.62, 24.64))
        bezierPath.addCurveToPoint(CGPointMake(23.8, 21.98), controlPoint1: CGPointMake(25.63, 22.75), controlPoint2: CGPointMake(24.81, 21.98))
        bezierPath.closePath()
        AssetsKit.femaleIconFill.setFill()
        bezierPath.fill()
    }

    public class func drawMaleIcon() {

        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(16.2, 26.05, 4, 1.6))
        AssetsKit.maleIconFill.setFill()
        ovalPath.fill()


        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(35.27, 21.55))
        bezierPath.addLineToPoint(CGPointMake(35.27, 14.32))
        bezierPath.addCurveToPoint(CGPointMake(35.17, 12.91), controlPoint1: CGPointMake(35.27, 13.82), controlPoint2: CGPointMake(35.23, 13.35))
        bezierPath.addCurveToPoint(CGPointMake(35.15, 12.72), controlPoint1: CGPointMake(35.16, 12.85), controlPoint2: CGPointMake(35.16, 12.79))
        bezierPath.addCurveToPoint(CGPointMake(35.1, 12.54), controlPoint1: CGPointMake(35.14, 12.66), controlPoint2: CGPointMake(35.12, 12.6))
        bezierPath.addCurveToPoint(CGPointMake(34.59, 10.84), controlPoint1: CGPointMake(34.99, 11.91), controlPoint2: CGPointMake(34.82, 11.35))
        bezierPath.addCurveToPoint(CGPointMake(21.72, 1.16), controlPoint1: CGPointMake(32.78, 6.47), controlPoint2: CGPointMake(27.64, 2.34))
        bezierPath.addCurveToPoint(CGPointMake(7.12, 7.41), controlPoint1: CGPointMake(15.42, -0.09), controlPoint2: CGPointMake(8.71, 3.26))
        bezierPath.addCurveToPoint(CGPointMake(2.13, 14.32), controlPoint1: CGPointMake(4.11, 8.32), controlPoint2: CGPointMake(2.13, 10.28))
        bezierPath.addLineToPoint(CGPointMake(2.13, 21.56))
        bezierPath.addCurveToPoint(CGPointMake(1, 25.02), controlPoint1: CGPointMake(1.43, 22.51), controlPoint2: CGPointMake(1, 23.71))
        bezierPath.addCurveToPoint(CGPointMake(4.67, 30.33), controlPoint1: CGPointMake(1, 27.52), controlPoint2: CGPointMake(2.55, 29.65))
        bezierPath.addCurveToPoint(CGPointMake(18.73, 39), controlPoint1: CGPointMake(7.36, 35.6), controlPoint2: CGPointMake(12.75, 39))
        bezierPath.addCurveToPoint(CGPointMake(32.79, 30.31), controlPoint1: CGPointMake(24.71, 39), controlPoint2: CGPointMake(30.1, 35.59))
        bezierPath.addCurveToPoint(CGPointMake(36.4, 25.01), controlPoint1: CGPointMake(34.88, 29.61), controlPoint2: CGPointMake(36.4, 27.5))
        bezierPath.addCurveToPoint(CGPointMake(35.27, 21.55), controlPoint1: CGPointMake(36.4, 23.71), controlPoint2: CGPointMake(35.97, 22.5))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(31.26, 27.18))
        bezierPath.addCurveToPoint(CGPointMake(30.59, 27.03), controlPoint1: CGPointMake(31.02, 27.18), controlPoint2: CGPointMake(30.8, 27.12))
        bezierPath.addCurveToPoint(CGPointMake(18.73, 35.62), controlPoint1: CGPointMake(28.91, 32.02), controlPoint2: CGPointMake(24.24, 35.62))
        bezierPath.addCurveToPoint(CGPointMake(6.86, 27.01), controlPoint1: CGPointMake(13.21, 35.62), controlPoint2: CGPointMake(8.53, 32.01))
        bezierPath.addCurveToPoint(CGPointMake(6.14, 27.18), controlPoint1: CGPointMake(6.64, 27.12), controlPoint2: CGPointMake(6.39, 27.18))
        bezierPath.addCurveToPoint(CGPointMake(4.3, 25.01), controlPoint1: CGPointMake(5.12, 27.18), controlPoint2: CGPointMake(4.3, 26.21))
        bezierPath.addCurveToPoint(CGPointMake(6.14, 22.85), controlPoint1: CGPointMake(4.3, 23.82), controlPoint2: CGPointMake(5.12, 22.85))
        bezierPath.addCurveToPoint(CGPointMake(6.2, 22.86), controlPoint1: CGPointMake(6.16, 22.85), controlPoint2: CGPointMake(6.18, 22.86))
        bezierPath.addCurveToPoint(CGPointMake(7.17, 16.89), controlPoint1: CGPointMake(6.21, 21.17), controlPoint2: CGPointMake(6.56, 18.5))
        bezierPath.addCurveToPoint(CGPointMake(10.99, 19.11), controlPoint1: CGPointMake(7.97, 18.04), controlPoint2: CGPointMake(9.19, 19.11))
        bezierPath.addLineToPoint(CGPointMake(10.99, 19.11))
        bezierPath.addCurveToPoint(CGPointMake(11.25, 19.1), controlPoint1: CGPointMake(11.08, 19.11), controlPoint2: CGPointMake(11.16, 19.11))
        bezierPath.addCurveToPoint(CGPointMake(11.61, 18.82), controlPoint1: CGPointMake(11.42, 19.09), controlPoint2: CGPointMake(11.56, 18.98))
        bezierPath.addCurveToPoint(CGPointMake(17.08, 14.06), controlPoint1: CGPointMake(11.63, 18.78), controlPoint2: CGPointMake(13.13, 14.48))
        bezierPath.addCurveToPoint(CGPointMake(15.71, 18.55), controlPoint1: CGPointMake(17.25, 14.9), controlPoint2: CGPointMake(17.5, 17.18))
        bezierPath.addCurveToPoint(CGPointMake(15.56, 18.99), controlPoint1: CGPointMake(15.58, 18.66), controlPoint2: CGPointMake(15.52, 18.83))
        bezierPath.addCurveToPoint(CGPointMake(15.9, 19.31), controlPoint1: CGPointMake(15.6, 19.16), controlPoint2: CGPointMake(15.73, 19.28))
        bezierPath.addCurveToPoint(CGPointMake(17.97, 19.44), controlPoint1: CGPointMake(15.93, 19.31), controlPoint2: CGPointMake(16.75, 19.44))
        bezierPath.addCurveToPoint(CGPointMake(26.28, 16.51), controlPoint1: CGPointMake(20.05, 19.44), controlPoint2: CGPointMake(23.82, 19.05))
        bezierPath.addCurveToPoint(CGPointMake(27.08, 19.87), controlPoint1: CGPointMake(26.69, 16.94), controlPoint2: CGPointMake(27.42, 17.99))
        bezierPath.addCurveToPoint(CGPointMake(27.28, 20.31), controlPoint1: CGPointMake(27.05, 20.05), controlPoint2: CGPointMake(27.13, 20.22))
        bezierPath.addCurveToPoint(CGPointMake(27.49, 20.37), controlPoint1: CGPointMake(27.34, 20.35), controlPoint2: CGPointMake(27.41, 20.37))
        bezierPath.addCurveToPoint(CGPointMake(27.75, 20.26), controlPoint1: CGPointMake(27.58, 20.37), controlPoint2: CGPointMake(27.68, 20.33))
        bezierPath.addCurveToPoint(CGPointMake(30.44, 17.33), controlPoint1: CGPointMake(27.84, 20.19), controlPoint2: CGPointMake(29.37, 18.83))
        bezierPath.addCurveToPoint(CGPointMake(31.26, 22.85), controlPoint1: CGPointMake(30.96, 18.96), controlPoint2: CGPointMake(31.25, 21.31))
        bezierPath.addLineToPoint(CGPointMake(31.26, 22.85))
        bezierPath.addCurveToPoint(CGPointMake(33.11, 25.01), controlPoint1: CGPointMake(32.29, 22.85), controlPoint2: CGPointMake(33.11, 23.81))
        bezierPath.addCurveToPoint(CGPointMake(31.26, 27.18), controlPoint1: CGPointMake(33.11, 26.21), controlPoint2: CGPointMake(32.29, 27.18))
        bezierPath.closePath()
        AssetsKit.maleIconFill.setFill()
        bezierPath.fill()
        AssetsKit.iconUntapped.setStroke()
        bezierPath.lineWidth = 0
        bezierPath.stroke()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(10.95, 21.15, 3.6, 3.6))
        AssetsKit.maleIconFill.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(22.85, 21.15, 3.6, 3.6))
        AssetsKit.maleIconFill.setFill()
        oval3Path.fill()
    }

    public class func drawCakeIcon() {

        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(40, 33.29))
        bezierPath.addCurveToPoint(CGPointMake(40.09, 32.79), controlPoint1: CGPointMake(40.06, 33.13), controlPoint2: CGPointMake(40.09, 32.97))
        bezierPath.addLineToPoint(CGPointMake(40.09, 17.28))
        bezierPath.addCurveToPoint(CGPointMake(38.74, 15.93), controlPoint1: CGPointMake(40.09, 16.54), controlPoint2: CGPointMake(39.49, 15.93))
        bezierPath.addLineToPoint(CGPointMake(25.62, 15.93))
        bezierPath.addLineToPoint(CGPointMake(25.62, 8.27))
        bezierPath.addLineToPoint(CGPointMake(25.29, 8.2))
        bezierPath.addCurveToPoint(CGPointMake(23.36, 7.83), controlPoint1: CGPointMake(25.05, 8.15), controlPoint2: CGPointMake(24.24, 7.97))
        bezierPath.addCurveToPoint(CGPointMake(23.38, 7.49), controlPoint1: CGPointMake(23.36, 7.73), controlPoint2: CGPointMake(23.37, 7.61))
        bezierPath.addCurveToPoint(CGPointMake(23.58, 7.54), controlPoint1: CGPointMake(23.45, 7.51), controlPoint2: CGPointMake(23.51, 7.53))
        bezierPath.addCurveToPoint(CGPointMake(23.86, 7.57), controlPoint1: CGPointMake(23.67, 7.56), controlPoint2: CGPointMake(23.76, 7.57))
        bezierPath.addCurveToPoint(CGPointMake(25.31, 6.94), controlPoint1: CGPointMake(24.39, 7.57), controlPoint2: CGPointMake(24.98, 7.31))
        bezierPath.addCurveToPoint(CGPointMake(25.38, 4.68), controlPoint1: CGPointMake(25.88, 6.2), controlPoint2: CGPointMake(25.55, 5.21))
        bezierPath.addCurveToPoint(CGPointMake(22.91, 0.7), controlPoint1: CGPointMake(24.95, 3.4), controlPoint2: CGPointMake(23.97, 1.63))
        bezierPath.addCurveToPoint(CGPointMake(22.45, 0.63), controlPoint1: CGPointMake(22.79, 0.59), controlPoint2: CGPointMake(22.6, 0.57))
        bezierPath.addCurveToPoint(CGPointMake(22.2, 1.02), controlPoint1: CGPointMake(22.3, 0.7), controlPoint2: CGPointMake(22.2, 0.86))
        bezierPath.addCurveToPoint(CGPointMake(22.03, 2.61), controlPoint1: CGPointMake(22.2, 1.52), controlPoint2: CGPointMake(22.14, 2.03))
        bezierPath.addCurveToPoint(CGPointMake(21.52, 3.61), controlPoint1: CGPointMake(21.93, 3.03), controlPoint2: CGPointMake(21.75, 3.29))
        bezierPath.addCurveToPoint(CGPointMake(21.1, 4.26), controlPoint1: CGPointMake(21.39, 3.79), controlPoint2: CGPointMake(21.25, 3.99))
        bezierPath.addCurveToPoint(CGPointMake(21.86, 6.96), controlPoint1: CGPointMake(20.43, 5.6), controlPoint2: CGPointMake(21.26, 6.38))
        bezierPath.addCurveToPoint(CGPointMake(22.46, 7.59), controlPoint1: CGPointMake(22.07, 7.16), controlPoint2: CGPointMake(22.3, 7.37))
        bezierPath.addCurveToPoint(CGPointMake(22.51, 7.65), controlPoint1: CGPointMake(22.48, 7.61), controlPoint2: CGPointMake(22.5, 7.63))
        bezierPath.addCurveToPoint(CGPointMake(22.51, 7.71), controlPoint1: CGPointMake(22.51, 7.67), controlPoint2: CGPointMake(22.51, 7.69))
        bezierPath.addCurveToPoint(CGPointMake(21.54, 7.65), controlPoint1: CGPointMake(22.13, 7.67), controlPoint2: CGPointMake(21.8, 7.65))
        bezierPath.addCurveToPoint(CGPointMake(20.4, 8.1), controlPoint1: CGPointMake(21.1, 7.65), controlPoint2: CGPointMake(20.58, 7.7))
        bezierPath.addCurveToPoint(CGPointMake(20.58, 8.86), controlPoint1: CGPointMake(20.34, 8.24), controlPoint2: CGPointMake(20.28, 8.53))
        bezierPath.addCurveToPoint(CGPointMake(20.52, 15.16), controlPoint1: CGPointMake(20.68, 9.07), controlPoint2: CGPointMake(20.74, 10.35))
        bezierPath.addCurveToPoint(CGPointMake(20.48, 15.93), controlPoint1: CGPointMake(20.5, 15.5), controlPoint2: CGPointMake(20.49, 15.74))
        bezierPath.addLineToPoint(CGPointMake(6.86, 15.93))
        bezierPath.addCurveToPoint(CGPointMake(5.5, 17.28), controlPoint1: CGPointMake(6.11, 15.93), controlPoint2: CGPointMake(5.5, 16.54))
        bezierPath.addLineToPoint(CGPointMake(5.5, 32.79))
        bezierPath.addCurveToPoint(CGPointMake(5.6, 33.29), controlPoint1: CGPointMake(5.5, 32.97), controlPoint2: CGPointMake(5.54, 33.14))
        bezierPath.addLineToPoint(CGPointMake(0, 33.29))
        bezierPath.addLineToPoint(CGPointMake(1.63, 35.91))
        bezierPath.addLineToPoint(CGPointMake(1.69, 36))
        bezierPath.addLineToPoint(CGPointMake(42.9, 36))
        bezierPath.addLineToPoint(CGPointMake(44.92, 33.29))
        bezierPath.addLineToPoint(CGPointMake(40, 33.29))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(23.61, 6.4))
        bezierPath.addCurveToPoint(CGPointMake(23.62, 3.63), controlPoint1: CGPointMake(23.85, 5.37), controlPoint2: CGPointMake(24.1, 4.3))
        bezierPath.addLineToPoint(CGPointMake(23.51, 3.47))
        bezierPath.addLineToPoint(CGPointMake(22.82, 3.96))
        bezierPath.addLineToPoint(CGPointMake(22.93, 4.12))
        bezierPath.addCurveToPoint(CGPointMake(22.77, 6.2), controlPoint1: CGPointMake(23.18, 4.48), controlPoint2: CGPointMake(22.95, 5.47))
        bezierPath.addLineToPoint(CGPointMake(22.76, 6.26))
        bezierPath.addCurveToPoint(CGPointMake(22.69, 6.57), controlPoint1: CGPointMake(22.73, 6.37), controlPoint2: CGPointMake(22.71, 6.47))
        bezierPath.addCurveToPoint(CGPointMake(22.44, 6.33), controlPoint1: CGPointMake(22.61, 6.49), controlPoint2: CGPointMake(22.53, 6.41))
        bezierPath.addCurveToPoint(CGPointMake(21.86, 4.65), controlPoint1: CGPointMake(21.84, 5.76), controlPoint2: CGPointMake(21.48, 5.41))
        bezierPath.addCurveToPoint(CGPointMake(22.22, 4.09), controlPoint1: CGPointMake(21.96, 4.45), controlPoint2: CGPointMake(22.08, 4.29))
        bezierPath.addCurveToPoint(CGPointMake(22.86, 2.79), controlPoint1: CGPointMake(22.48, 3.73), controlPoint2: CGPointMake(22.72, 3.39))
        bezierPath.addCurveToPoint(CGPointMake(22.99, 2.03), controlPoint1: CGPointMake(22.91, 2.52), controlPoint2: CGPointMake(22.96, 2.28))
        bezierPath.addCurveToPoint(CGPointMake(24.57, 4.95), controlPoint1: CGPointMake(23.71, 2.95), controlPoint2: CGPointMake(24.3, 4.13))
        bezierPath.addCurveToPoint(CGPointMake(24.65, 6.4), controlPoint1: CGPointMake(24.74, 5.47), controlPoint2: CGPointMake(24.91, 6.06))
        bezierPath.addCurveToPoint(CGPointMake(23.74, 6.7), controlPoint1: CGPointMake(24.47, 6.6), controlPoint2: CGPointMake(24.04, 6.76))
        bezierPath.addCurveToPoint(CGPointMake(23.57, 6.59), controlPoint1: CGPointMake(23.6, 6.68), controlPoint2: CGPointMake(23.57, 6.62))
        bezierPath.addCurveToPoint(CGPointMake(23.56, 6.57), controlPoint1: CGPointMake(23.56, 6.58), controlPoint2: CGPointMake(23.56, 6.58))
        bezierPath.addLineToPoint(CGPointMake(23.61, 6.4))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(23.15, 9.02))
        bezierPath.addLineToPoint(CGPointMake(23.37, 8.69))
        bezierPath.addCurveToPoint(CGPointMake(24.77, 8.96), controlPoint1: CGPointMake(23.94, 8.79), controlPoint2: CGPointMake(24.46, 8.9))
        bezierPath.addLineToPoint(CGPointMake(24.77, 15.78))
        bezierPath.addLineToPoint(CGPointMake(21.34, 15.78))
        bezierPath.addLineToPoint(CGPointMake(21.37, 15.2))
        bezierPath.addCurveToPoint(CGPointMake(21.35, 8.5), controlPoint1: CGPointMake(21.57, 10.75), controlPoint2: CGPointMake(21.57, 9.07))
        bezierPath.addCurveToPoint(CGPointMake(22.69, 8.59), controlPoint1: CGPointMake(21.65, 8.48), controlPoint2: CGPointMake(22.1, 8.51))
        bezierPath.addCurveToPoint(CGPointMake(22.99, 8.91), controlPoint1: CGPointMake(22.77, 8.73), controlPoint2: CGPointMake(22.86, 8.84))
        bezierPath.addLineToPoint(CGPointMake(23.15, 9.02))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(12.5, 24.52))
        bezierPath.addCurveToPoint(CGPointMake(13.31, 24.57), controlPoint1: CGPointMake(12.77, 24.55), controlPoint2: CGPointMake(13.05, 24.57))
        bezierPath.addCurveToPoint(CGPointMake(19.15, 19.31), controlPoint1: CGPointMake(16.6, 24.57), controlPoint2: CGPointMake(18.11, 21.92))
        bezierPath.addCurveToPoint(CGPointMake(21.3, 21.02), controlPoint1: CGPointMake(19.93, 19.59), controlPoint2: CGPointMake(20.59, 20.29))
        bezierPath.addCurveToPoint(CGPointMake(24.7, 23.4), controlPoint1: CGPointMake(22.24, 22.01), controlPoint2: CGPointMake(23.22, 23.03))
        bezierPath.addCurveToPoint(CGPointMake(25.67, 23.53), controlPoint1: CGPointMake(25.05, 23.49), controlPoint2: CGPointMake(25.37, 23.53))
        bezierPath.addCurveToPoint(CGPointMake(28.74, 20.3), controlPoint1: CGPointMake(27.73, 23.53), controlPoint2: CGPointMake(28.31, 21.66))
        bezierPath.addCurveToPoint(CGPointMake(29.35, 18.96), controlPoint1: CGPointMake(28.92, 19.72), controlPoint2: CGPointMake(29.12, 19.07))
        bezierPath.addCurveToPoint(CGPointMake(30.87, 20.72), controlPoint1: CGPointMake(29.64, 18.96), controlPoint2: CGPointMake(30.46, 20.14))
        bezierPath.addCurveToPoint(CGPointMake(34.76, 24.29), controlPoint1: CGPointMake(31.89, 22.19), controlPoint2: CGPointMake(33.18, 24.02))
        bezierPath.addCurveToPoint(CGPointMake(37.47, 23.83), controlPoint1: CGPointMake(35.73, 24.52), controlPoint2: CGPointMake(36.66, 24.36))
        bezierPath.addCurveToPoint(CGPointMake(39.24, 21.69), controlPoint1: CGPointMake(38.18, 23.36), controlPoint2: CGPointMake(38.77, 22.65))
        bezierPath.addLineToPoint(CGPointMake(39.24, 32.79))
        bezierPath.addCurveToPoint(CGPointMake(38.74, 33.29), controlPoint1: CGPointMake(39.24, 33.07), controlPoint2: CGPointMake(39.02, 33.29))
        bezierPath.addLineToPoint(CGPointMake(6.86, 33.29))
        bezierPath.addCurveToPoint(CGPointMake(6.36, 32.79), controlPoint1: CGPointMake(6.58, 33.29), controlPoint2: CGPointMake(6.36, 33.07))
        bezierPath.addLineToPoint(CGPointMake(6.36, 19.58))
        bezierPath.addCurveToPoint(CGPointMake(8.07, 21.37), controlPoint1: CGPointMake(6.98, 20.07), controlPoint2: CGPointMake(7.51, 20.7))
        bezierPath.addCurveToPoint(CGPointMake(12.5, 24.52), controlPoint1: CGPointMake(9.21, 22.71), controlPoint2: CGPointMake(10.38, 24.09))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(37, 23.12))
        bezierPath.addCurveToPoint(CGPointMake(34.93, 23.45), controlPoint1: CGPointMake(36.38, 23.53), controlPoint2: CGPointMake(35.72, 23.64))
        bezierPath.addCurveToPoint(CGPointMake(31.56, 20.22), controlPoint1: CGPointMake(33.66, 23.24), controlPoint2: CGPointMake(32.5, 21.57))
        bezierPath.addCurveToPoint(CGPointMake(29.35, 18.1), controlPoint1: CGPointMake(30.73, 19.04), controlPoint2: CGPointMake(30.08, 18.1))
        bezierPath.addCurveToPoint(CGPointMake(28.99, 18.18), controlPoint1: CGPointMake(29.23, 18.1), controlPoint2: CGPointMake(29.11, 18.13))
        bezierPath.addCurveToPoint(CGPointMake(27.92, 20.06), controlPoint1: CGPointMake(28.42, 18.45), controlPoint2: CGPointMake(28.19, 19.2))
        bezierPath.addCurveToPoint(CGPointMake(25.65, 22.67), controlPoint1: CGPointMake(27.52, 21.35), controlPoint2: CGPointMake(27.11, 22.67))
        bezierPath.addCurveToPoint(CGPointMake(24.9, 22.58), controlPoint1: CGPointMake(25.42, 22.67), controlPoint2: CGPointMake(25.17, 22.64))
        bezierPath.addCurveToPoint(CGPointMake(21.91, 20.43), controlPoint1: CGPointMake(23.67, 22.27), controlPoint2: CGPointMake(22.78, 21.34))
        bezierPath.addCurveToPoint(CGPointMake(18.98, 18.38), controlPoint1: CGPointMake(21.02, 19.5), controlPoint2: CGPointMake(20.17, 18.61))
        bezierPath.addLineToPoint(CGPointMake(18.62, 18.31))
        bezierPath.addLineToPoint(CGPointMake(18.49, 18.64))
        bezierPath.addCurveToPoint(CGPointMake(13.29, 23.72), controlPoint1: CGPointMake(17.49, 21.28), controlPoint2: CGPointMake(16.16, 23.72))
        bezierPath.addCurveToPoint(CGPointMake(12.64, 23.68), controlPoint1: CGPointMake(13.07, 23.72), controlPoint2: CGPointMake(12.85, 23.7))
        bezierPath.addCurveToPoint(CGPointMake(8.72, 20.81), controlPoint1: CGPointMake(10.84, 23.32), controlPoint2: CGPointMake(9.76, 22.04))
        bezierPath.addCurveToPoint(CGPointMake(6.36, 18.55), controlPoint1: CGPointMake(8.06, 20.03), controlPoint2: CGPointMake(7.3, 19.14))
        bezierPath.addLineToPoint(CGPointMake(6.36, 17.28))
        bezierPath.addCurveToPoint(CGPointMake(6.86, 16.78), controlPoint1: CGPointMake(6.36, 17.01), controlPoint2: CGPointMake(6.58, 16.78))
        bezierPath.addLineToPoint(CGPointMake(20.67, 16.78))
        bezierPath.addLineToPoint(CGPointMake(20.72, 16.83))
        bezierPath.addLineToPoint(CGPointMake(20.91, 16.83))
        bezierPath.addCurveToPoint(CGPointMake(21.11, 16.78), controlPoint1: CGPointMake(20.98, 16.83), controlPoint2: CGPointMake(21.05, 16.81))
        bezierPath.addLineToPoint(CGPointMake(38.74, 16.78))
        bezierPath.addCurveToPoint(CGPointMake(39.24, 17.28), controlPoint1: CGPointMake(39.02, 16.78), controlPoint2: CGPointMake(39.24, 17))
        bezierPath.addLineToPoint(CGPointMake(39.25, 18.95))
        bezierPath.addCurveToPoint(CGPointMake(37, 23.12), controlPoint1: CGPointMake(38.98, 20.43), controlPoint2: CGPointMake(38.25, 22.3))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(2.16, 35.15))
        bezierPath.addLineToPoint(CGPointMake(1.54, 34.15))
        bezierPath.addLineToPoint(CGPointMake(43.22, 34.15))
        bezierPath.addLineToPoint(CGPointMake(42.47, 35.15))
        bezierPath.addLineToPoint(CGPointMake(2.16, 35.15))
        bezierPath.closePath()
        AssetsKit.femaleIconFill.setFill()
        bezierPath.fill()
    }

    public class func drawFlameIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Group
        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, (scale - 0.063), scale)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(130.36, 533.33))
        bezierPath.addCurveToPoint(CGPointMake(141.06, 377.06), controlPoint1: CGPointMake(94.81, 459.37), controlPoint2: CGPointMake(113.74, 416.99))
        bezierPath.addCurveToPoint(CGPointMake(178.69, 290.05), controlPoint1: CGPointMake(170.98, 333.33), controlPoint2: CGPointMake(178.69, 290.05))
        bezierPath.addCurveToPoint(CGPointMake(192.8, 368.44), controlPoint1: CGPointMake(178.69, 290.05), controlPoint2: CGPointMake(202.21, 320.62))
        bezierPath.addCurveToPoint(CGPointMake(235.91, 220.28), controlPoint1: CGPointMake(234.35, 322.19), controlPoint2: CGPointMake(242.19, 248.5))
        bezierPath.addCurveToPoint(CGPointMake(315.87, 533.33), controlPoint1: CGPointMake(329.83, 285.91), controlPoint2: CGPointMake(369.96, 428.02))
        bezierPath.addCurveToPoint(CGPointMake(349.81, 99.56), controlPoint1: CGPointMake(603.57, 370.56), controlPoint2: CGPointMake(387.44, 126.99))
        bezierPath.addCurveToPoint(CGPointMake(339.39, 195.98), controlPoint1: CGPointMake(362.35, 126.99), controlPoint2: CGPointMake(364.73, 173.44))
        bezierPath.addCurveToPoint(CGPointMake(190.45, 0), controlPoint1: CGPointMake(296.5, 33.33), controlPoint2: CGPointMake(190.45, 0))
        bezierPath.addCurveToPoint(CGPointMake(89.04, 244.13), controlPoint1: CGPointMake(202.99, 83.88), controlPoint2: CGPointMake(144.98, 175.6))
        bezierPath.addCurveToPoint(CGPointMake(67.4, 155.6), controlPoint1: CGPointMake(87.08, 210.68), controlPoint2: CGPointMake(84.99, 187.6))
        bezierPath.addCurveToPoint(CGPointMake(4.45, 326.76), controlPoint1: CGPointMake(63.45, 216.36), controlPoint2: CGPointMake(17.02, 265.88))
        bezierPath.addCurveToPoint(CGPointMake(130.36, 533.33), controlPoint1: CGPointMake(-12.58, 409.2), controlPoint2: CGPointMake(17.21, 469.56))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        AssetsKit.flameColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawCarIcon() {

        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(24.5, 17.52))
        bezierPath.addCurveToPoint(CGPointMake(22.14, 15.16), controlPoint1: CGPointMake(23.2, 17.52), controlPoint2: CGPointMake(22.14, 16.46))
        bezierPath.addCurveToPoint(CGPointMake(24.5, 12.8), controlPoint1: CGPointMake(22.14, 13.86), controlPoint2: CGPointMake(23.2, 12.8))
        bezierPath.addCurveToPoint(CGPointMake(26.87, 15.16), controlPoint1: CGPointMake(25.81, 12.8), controlPoint2: CGPointMake(26.87, 13.86))
        bezierPath.addCurveToPoint(CGPointMake(24.5, 17.52), controlPoint1: CGPointMake(26.87, 16.46), controlPoint2: CGPointMake(25.81, 17.52))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(4.41, 15.16))
        bezierPath.addCurveToPoint(CGPointMake(6.77, 12.8), controlPoint1: CGPointMake(4.41, 13.86), controlPoint2: CGPointMake(5.47, 12.8))
        bezierPath.addCurveToPoint(CGPointMake(9.13, 15.16), controlPoint1: CGPointMake(8.07, 12.8), controlPoint2: CGPointMake(9.13, 13.86))
        bezierPath.addCurveToPoint(CGPointMake(6.77, 17.52), controlPoint1: CGPointMake(9.13, 16.46), controlPoint2: CGPointMake(8.07, 17.52))
        bezierPath.addCurveToPoint(CGPointMake(4.41, 15.16), controlPoint1: CGPointMake(5.47, 17.52), controlPoint2: CGPointMake(4.41, 16.46))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(8, 4.9))
        bezierPath.addCurveToPoint(CGPointMake(23.24, 4.9), controlPoint1: CGPointMake(11.06, 2.89), controlPoint2: CGPointMake(20.18, 2.89))
        bezierPath.addCurveToPoint(CGPointMake(25.3, 8.81), controlPoint1: CGPointMake(23.84, 5.29), controlPoint2: CGPointMake(24.61, 6.87))
        bezierPath.addLineToPoint(CGPointMake(5.94, 8.81))
        bezierPath.addCurveToPoint(CGPointMake(8, 4.9), controlPoint1: CGPointMake(6.64, 6.87), controlPoint2: CGPointMake(7.4, 5.29))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(29.03, 11.33))
        bezierPath.addCurveToPoint(CGPointMake(24.57, 2.9), controlPoint1: CGPointMake(28.28, 9.35), controlPoint2: CGPointMake(25.68, 3.63))
        bezierPath.addCurveToPoint(CGPointMake(6.68, 2.9), controlPoint1: CGPointMake(20.72, 0.37), controlPoint2: CGPointMake(10.52, 0.37))
        bezierPath.addCurveToPoint(CGPointMake(2.15, 11.33), controlPoint1: CGPointMake(5.57, 3.63), controlPoint2: CGPointMake(2.91, 9.35))
        bezierPath.moveToPoint(CGPointMake(2.15, 11.33))
        bezierPath.addCurveToPoint(CGPointMake(0.85, 14.86), controlPoint1: CGPointMake(1.28, 12.33), controlPoint2: CGPointMake(0.86, 13.6))
        bezierPath.addCurveToPoint(CGPointMake(2.53, 18.83), controlPoint1: CGPointMake(0.85, 16.42), controlPoint2: CGPointMake(1.44, 17.83))
        bezierPath.addCurveToPoint(CGPointMake(2.56, 18.86), controlPoint1: CGPointMake(2.54, 18.84), controlPoint2: CGPointMake(2.55, 18.85))
        bezierPath.addLineToPoint(CGPointMake(2.56, 21.91))
        bezierPath.addCurveToPoint(CGPointMake(3.76, 23.11), controlPoint1: CGPointMake(2.56, 22.57), controlPoint2: CGPointMake(3.1, 23.11))
        bezierPath.addLineToPoint(CGPointMake(6.57, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(7.77, 21.91), controlPoint1: CGPointMake(7.23, 23.11), controlPoint2: CGPointMake(7.77, 22.57))
        bezierPath.addLineToPoint(CGPointMake(7.77, 20.69))
        bezierPath.addLineToPoint(CGPointMake(23.48, 20.69))
        bezierPath.addLineToPoint(CGPointMake(23.48, 21.91))
        bezierPath.addCurveToPoint(CGPointMake(24.68, 23.11), controlPoint1: CGPointMake(23.48, 22.57), controlPoint2: CGPointMake(24.02, 23.11))
        bezierPath.addLineToPoint(CGPointMake(27.48, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(28.68, 21.91), controlPoint1: CGPointMake(28.14, 23.11), controlPoint2: CGPointMake(28.68, 22.57))
        bezierPath.addLineToPoint(CGPointMake(28.68, 18.92))
        bezierPath.addCurveToPoint(CGPointMake(30.39, 14.97), controlPoint1: CGPointMake(29.83, 17.87), controlPoint2: CGPointMake(30.38, 16.42))
        bezierPath.addCurveToPoint(CGPointMake(29.03, 11.33), controlPoint1: CGPointMake(30.39, 13.66), controlPoint2: CGPointMake(29.95, 12.35))
        AssetsKit.carIconColor.setFill()
        bezierPath.fill()
    }

    public class func drawEtcIcon() {

        //// Group
        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(0, 0, 25, 25))
        AssetsKit.etcColor.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        var oval2Path = UIBezierPath(ovalInRect: CGRectMake(32, 0, 25, 25))
        AssetsKit.etcColor.setFill()
        oval2Path.fill()


        //// Oval 3 Drawing
        var oval3Path = UIBezierPath(ovalInRect: CGRectMake(65, 0, 25, 25))
        AssetsKit.etcColor.setFill()
        oval3Path.fill()
    }

    public class func drawWTGButtonTapped() {

        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0, 42.54))
        bezierPath.addCurveToPoint(CGPointMake(5.01, 33.24), controlPoint1: CGPointMake(0, 39.23), controlPoint2: CGPointMake(2.24, 35.05))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 0.61), controlPoint1: CGPointMake(5.01, 33.24), controlPoint2: CGPointMake(53.51, 0.61))
        bezierPath.addCurveToPoint(CGPointMake(129.99, 33.24), controlPoint1: CGPointMake(81.49, 0.61), controlPoint2: CGPointMake(129.99, 33.24))
        bezierPath.addCurveToPoint(CGPointMake(135, 42.54), controlPoint1: CGPointMake(132.76, 35.06), controlPoint2: CGPointMake(135, 39.22))
        bezierPath.addLineToPoint(CGPointMake(135, 103.88))
        bezierPath.addCurveToPoint(CGPointMake(129.91, 113.05), controlPoint1: CGPointMake(135, 107.2), controlPoint2: CGPointMake(132.73, 111.3))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 145), controlPoint1: CGPointMake(129.91, 113.05), controlPoint2: CGPointMake(79.35, 145))
        bezierPath.addCurveToPoint(CGPointMake(5.09, 113.05), controlPoint1: CGPointMake(55.65, 145), controlPoint2: CGPointMake(5.09, 113.05))
        bezierPath.addCurveToPoint(CGPointMake(0, 103.88), controlPoint1: CGPointMake(2.28, 111.3), controlPoint2: CGPointMake(0, 107.2))
        bezierPath.addLineToPoint(CGPointMake(0, 42.54))
        bezierPath.closePath()
        AssetsKit.themeColor.setFill()
        bezierPath.fill()
    }

    public class func drawWTGButtonUntapped() {

        //// Group
        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0, 43.54))
        bezierPath.addCurveToPoint(CGPointMake(5.01, 34.24), controlPoint1: CGPointMake(0, 40.23), controlPoint2: CGPointMake(2.24, 36.05))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 1.61), controlPoint1: CGPointMake(5.01, 34.24), controlPoint2: CGPointMake(53.51, 1.61))
        bezierPath.addCurveToPoint(CGPointMake(129.99, 34.24), controlPoint1: CGPointMake(81.49, 1.61), controlPoint2: CGPointMake(129.99, 34.24))
        bezierPath.addCurveToPoint(CGPointMake(135, 43.54), controlPoint1: CGPointMake(132.76, 36.06), controlPoint2: CGPointMake(135, 40.22))
        bezierPath.addLineToPoint(CGPointMake(135, 104.88))
        bezierPath.addCurveToPoint(CGPointMake(129.91, 114.05), controlPoint1: CGPointMake(135, 108.2), controlPoint2: CGPointMake(132.73, 112.3))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 146), controlPoint1: CGPointMake(129.91, 114.05), controlPoint2: CGPointMake(79.35, 146))
        bezierPath.addCurveToPoint(CGPointMake(5.09, 114.05), controlPoint1: CGPointMake(55.65, 146), controlPoint2: CGPointMake(5.09, 114.05))
        bezierPath.addCurveToPoint(CGPointMake(0, 104.88), controlPoint1: CGPointMake(2.28, 112.3), controlPoint2: CGPointMake(0, 108.2))
        bezierPath.addLineToPoint(CGPointMake(0, 43.54))
        bezierPath.closePath()
        AssetsKit.themeColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(6.97, 46.54))
        bezier2Path.addCurveToPoint(CGPointMake(11.49, 38.21), controlPoint1: CGPointMake(6.97, 43.57), controlPoint2: CGPointMake(8.99, 39.84))
        bezier2Path.addCurveToPoint(CGPointMake(67.98, 9), controlPoint1: CGPointMake(11.49, 38.21), controlPoint2: CGPointMake(55.34, 9))
        bezier2Path.addCurveToPoint(CGPointMake(124.48, 38.21), controlPoint1: CGPointMake(80.63, 9), controlPoint2: CGPointMake(124.48, 38.21))
        bezier2Path.addCurveToPoint(CGPointMake(129, 46.54), controlPoint1: CGPointMake(126.97, 39.84), controlPoint2: CGPointMake(129, 43.57))
        bezier2Path.addLineToPoint(CGPointMake(129, 101.46))
        bezier2Path.addCurveToPoint(CGPointMake(124.4, 109.66), controlPoint1: CGPointMake(129, 104.42), controlPoint2: CGPointMake(126.95, 108.1))
        bezier2Path.addCurveToPoint(CGPointMake(67.98, 138.27), controlPoint1: CGPointMake(124.4, 109.66), controlPoint2: CGPointMake(78.7, 138.27))
        bezier2Path.addCurveToPoint(CGPointMake(11.57, 109.66), controlPoint1: CGPointMake(57.27, 138.27), controlPoint2: CGPointMake(11.57, 109.66))
        bezier2Path.addCurveToPoint(CGPointMake(6.97, 101.46), controlPoint1: CGPointMake(9.03, 108.1), controlPoint2: CGPointMake(6.97, 104.43))
        bezier2Path.addLineToPoint(CGPointMake(6.97, 46.54))
        bezier2Path.closePath()
        AssetsKit.iconUntapped.setFill()
        bezier2Path.fill()
    }

    public class func drawPriceTagBackground() {

        //// Rectangle Drawing
        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(1, 76))
        rectanglePath.addLineToPoint(CGPointMake(184, 76))
        rectanglePath.addLineToPoint(CGPointMake(218, 40))
        rectanglePath.addLineToPoint(CGPointMake(184, 0))
        rectanglePath.addLineToPoint(CGPointMake(1, 0))
        rectanglePath.addLineToPoint(CGPointMake(1, 76))
        rectanglePath.closePath()
        AssetsKit.priceTagColor.setFill()
        rectanglePath.fill()
    }

    public class func drawHomeButtonTapped() {

        //// Group
        //// Rectangle-72 Drawing
        var rectangle72Path = UIBezierPath()
        rectangle72Path.moveToPoint(CGPointMake(19, 8))
        rectangle72Path.addLineToPoint(CGPointMake(24, 13))
        rectangle72Path.addLineToPoint(CGPointMake(22, 13))
        rectangle72Path.addLineToPoint(CGPointMake(22, 24))
        rectangle72Path.addLineToPoint(CGPointMake(2, 24))
        rectangle72Path.addLineToPoint(CGPointMake(2, 13))
        rectangle72Path.addLineToPoint(CGPointMake(2, 13))
        rectangle72Path.addLineToPoint(CGPointMake(0, 13))
        rectangle72Path.addLineToPoint(CGPointMake(10.59, 2.41))
        rectangle72Path.addCurveToPoint(CGPointMake(13.41, 2.41), controlPoint1: CGPointMake(11.37, 1.63), controlPoint2: CGPointMake(12.63, 1.63))
        rectangle72Path.addLineToPoint(CGPointMake(15.05, 4.05))
        rectangle72Path.addCurveToPoint(CGPointMake(17, 2.5), controlPoint1: CGPointMake(15.26, 3.16), controlPoint2: CGPointMake(16.05, 2.5))
        rectangle72Path.addCurveToPoint(CGPointMake(19, 4.5), controlPoint1: CGPointMake(18.11, 2.5), controlPoint2: CGPointMake(19, 3.39))
        rectangle72Path.addLineToPoint(CGPointMake(19, 8))
        rectangle72Path.addLineToPoint(CGPointMake(19, 8))
        rectangle72Path.closePath()
        rectangle72Path.moveToPoint(CGPointMake(11.5, 16))
        rectangle72Path.addCurveToPoint(CGPointMake(9.5, 18), controlPoint1: CGPointMake(10.4, 16), controlPoint2: CGPointMake(9.5, 16.89))
        rectangle72Path.addLineToPoint(CGPointMake(9.5, 24))
        rectangle72Path.addLineToPoint(CGPointMake(14.5, 24))
        rectangle72Path.addLineToPoint(CGPointMake(14.5, 18))
        rectangle72Path.addCurveToPoint(CGPointMake(12.5, 16), controlPoint1: CGPointMake(14.5, 16.89), controlPoint2: CGPointMake(13.61, 16))
        rectangle72Path.addLineToPoint(CGPointMake(11.5, 16))
        rectangle72Path.closePath()
        rectangle72Path.miterLimit = 4;

        rectangle72Path.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        rectangle72Path.fill()


        //// Oval-35 Drawing
        var oval35Path = UIBezierPath(ovalInRect: CGRectMake(9.5, 8, 5, 5))
        AssetsKit.iconUntapped.setFill()
        oval35Path.fill()
        AssetsKit.iconUntapped.setStroke()
        oval35Path.lineWidth = 1
        oval35Path.stroke()
    }

    public class func drawHomeButtonUntapped() {

        //// Group
        //// Rectangle-72 Drawing
        var rectangle72Path = UIBezierPath()
        rectangle72Path.moveToPoint(CGPointMake(19, 7))
        rectangle72Path.addLineToPoint(CGPointMake(24, 12))
        rectangle72Path.addLineToPoint(CGPointMake(22, 12))
        rectangle72Path.addLineToPoint(CGPointMake(22, 23))
        rectangle72Path.addLineToPoint(CGPointMake(2, 23))
        rectangle72Path.addLineToPoint(CGPointMake(2, 12))
        rectangle72Path.addLineToPoint(CGPointMake(2, 12))
        rectangle72Path.addLineToPoint(CGPointMake(0, 12))
        rectangle72Path.addLineToPoint(CGPointMake(10.59, 1.41))
        rectangle72Path.addCurveToPoint(CGPointMake(13.41, 1.41), controlPoint1: CGPointMake(11.37, 0.63), controlPoint2: CGPointMake(12.63, 0.63))
        rectangle72Path.addLineToPoint(CGPointMake(15.05, 3.05))
        rectangle72Path.addCurveToPoint(CGPointMake(17, 1.5), controlPoint1: CGPointMake(15.26, 2.16), controlPoint2: CGPointMake(16.05, 1.5))
        rectangle72Path.addCurveToPoint(CGPointMake(19, 3.5), controlPoint1: CGPointMake(18.11, 1.5), controlPoint2: CGPointMake(19, 2.39))
        rectangle72Path.addLineToPoint(CGPointMake(19, 7))
        rectangle72Path.addLineToPoint(CGPointMake(19, 7))
        rectangle72Path.closePath()
        rectangle72Path.moveToPoint(CGPointMake(11.5, 15))
        rectangle72Path.addCurveToPoint(CGPointMake(9.5, 17), controlPoint1: CGPointMake(10.4, 15), controlPoint2: CGPointMake(9.5, 15.89))
        rectangle72Path.addLineToPoint(CGPointMake(9.5, 23))
        rectangle72Path.addLineToPoint(CGPointMake(14.5, 23))
        rectangle72Path.addLineToPoint(CGPointMake(14.5, 17))
        rectangle72Path.addCurveToPoint(CGPointMake(12.5, 15), controlPoint1: CGPointMake(14.5, 15.89), controlPoint2: CGPointMake(13.61, 15))
        rectangle72Path.addLineToPoint(CGPointMake(11.5, 15))
        rectangle72Path.closePath()
        rectangle72Path.miterLimit = 4;

        rectangle72Path.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setStroke()
        rectangle72Path.lineWidth = 1
        rectangle72Path.stroke()


        //// Oval-35 Drawing
        var oval35Path = UIBezierPath(ovalInRect: CGRectMake(9.5, 7, 5, 5))
        AssetsKit.bottomBarButtonUntapped.setStroke()
        oval35Path.lineWidth = 1
        oval35Path.stroke()
    }

    public class func drawNearbyButtonTapped() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Group
        //// Fill- Drawing
        var fillPath = UIBezierPath()
        fillPath.moveToPoint(CGPointMake(7.5, 20.68))
        fillPath.addLineToPoint(CGPointMake(7.09, 20.21))
        fillPath.addCurveToPoint(CGPointMake(0.04, 7.38), controlPoint1: CGPointMake(6.8, 19.88), controlPoint2: CGPointMake(0.04, 12.06))
        fillPath.addCurveToPoint(CGPointMake(7.5, 0.04), controlPoint1: CGPointMake(0.04, 3.33), controlPoint2: CGPointMake(3.39, 0.04))
        fillPath.addCurveToPoint(CGPointMake(14.96, 7.38), controlPoint1: CGPointMake(11.61, 0.04), controlPoint2: CGPointMake(14.96, 3.33))
        fillPath.addCurveToPoint(CGPointMake(7.91, 20.21), controlPoint1: CGPointMake(14.96, 12.06), controlPoint2: CGPointMake(8.2, 19.88))
        fillPath.addLineToPoint(CGPointMake(7.5, 20.68))
        fillPath.closePath()
        fillPath.miterLimit = 4;

        fillPath.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        fillPath.fill()


        //// Fill-56 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 7.5, 7.4)
        CGContextRotateCTM(context, 1.6 * CGFloat(M_PI) / 180)

        var fill56Path = UIBezierPath(ovalInRect: CGRectMake(-2.85, -2.8, 5.7, 5.6))
        AssetsKit.iconUntapped.setFill()
        fill56Path.fill()

        CGContextRestoreGState(context)
    }

    public class func drawNearbyButtonUntapped() {

        //// Group
        //// Fill-55 Drawing
        var fill55Path = UIBezierPath()
        fill55Path.moveToPoint(CGPointMake(7.5, 20.68))
        fill55Path.addLineToPoint(CGPointMake(7.09, 20.21))
        fill55Path.addCurveToPoint(CGPointMake(0.04, 7.38), controlPoint1: CGPointMake(6.8, 19.88), controlPoint2: CGPointMake(0.04, 12.06))
        fill55Path.addCurveToPoint(CGPointMake(7.5, 0.04), controlPoint1: CGPointMake(0.04, 3.33), controlPoint2: CGPointMake(3.39, 0.04))
        fill55Path.addCurveToPoint(CGPointMake(14.96, 7.38), controlPoint1: CGPointMake(11.61, 0.04), controlPoint2: CGPointMake(14.96, 3.33))
        fill55Path.addCurveToPoint(CGPointMake(7.91, 20.21), controlPoint1: CGPointMake(14.96, 12.06), controlPoint2: CGPointMake(8.2, 19.88))
        fill55Path.addLineToPoint(CGPointMake(7.5, 20.68))
        fill55Path.addLineToPoint(CGPointMake(7.5, 20.68))
        fill55Path.closePath()
        fill55Path.moveToPoint(CGPointMake(7.5, 1.1))
        fill55Path.addCurveToPoint(CGPointMake(1.11, 7.38), controlPoint1: CGPointMake(3.98, 1.1), controlPoint2: CGPointMake(1.11, 3.91))
        fill55Path.addCurveToPoint(CGPointMake(7.5, 19.04), controlPoint1: CGPointMake(1.11, 11.05), controlPoint2: CGPointMake(6.03, 17.27))
        fill55Path.addCurveToPoint(CGPointMake(13.89, 7.38), controlPoint1: CGPointMake(8.97, 17.27), controlPoint2: CGPointMake(13.89, 11.05))
        fill55Path.addCurveToPoint(CGPointMake(7.5, 1.1), controlPoint1: CGPointMake(13.89, 3.91), controlPoint2: CGPointMake(11.02, 1.1))
        fill55Path.addLineToPoint(CGPointMake(7.5, 1.1))
        fill55Path.closePath()
        fill55Path.miterLimit = 4;

        fill55Path.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        fill55Path.fill()


        //// Fill-56 Drawing
        var fill56Path = UIBezierPath()
        fill56Path.moveToPoint(CGPointMake(7.5, 10.18))
        fill56Path.addCurveToPoint(CGPointMake(4.66, 7.38), controlPoint1: CGPointMake(5.93, 10.18), controlPoint2: CGPointMake(4.66, 8.92))
        fill56Path.addCurveToPoint(CGPointMake(7.5, 4.58), controlPoint1: CGPointMake(4.66, 5.84), controlPoint2: CGPointMake(5.93, 4.58))
        fill56Path.addCurveToPoint(CGPointMake(10.34, 7.38), controlPoint1: CGPointMake(9.07, 4.58), controlPoint2: CGPointMake(10.34, 5.84))
        fill56Path.addCurveToPoint(CGPointMake(7.5, 10.18), controlPoint1: CGPointMake(10.34, 8.92), controlPoint2: CGPointMake(9.07, 10.18))
        fill56Path.addLineToPoint(CGPointMake(7.5, 10.18))
        fill56Path.closePath()
        fill56Path.moveToPoint(CGPointMake(7.5, 5.64))
        fill56Path.addCurveToPoint(CGPointMake(5.73, 7.38), controlPoint1: CGPointMake(6.52, 5.64), controlPoint2: CGPointMake(5.73, 6.42))
        fill56Path.addCurveToPoint(CGPointMake(7.5, 9.12), controlPoint1: CGPointMake(5.73, 8.34), controlPoint2: CGPointMake(6.52, 9.12))
        fill56Path.addCurveToPoint(CGPointMake(9.27, 7.38), controlPoint1: CGPointMake(8.48, 9.12), controlPoint2: CGPointMake(9.27, 8.34))
        fill56Path.addCurveToPoint(CGPointMake(7.5, 5.64), controlPoint1: CGPointMake(9.27, 6.42), controlPoint2: CGPointMake(8.48, 5.64))
        fill56Path.addLineToPoint(CGPointMake(7.5, 5.64))
        fill56Path.closePath()
        fill56Path.miterLimit = 4;

        fill56Path.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        fill56Path.fill()
    }

    public class func drawChatButtonTapped() {

        //// Group
        //// Fill-59 Drawing
        var fill59Path = UIBezierPath()
        fill59Path.moveToPoint(CGPointMake(4.4, 19.95))
        fill59Path.addLineToPoint(CGPointMake(3.27, 19.95))
        fill59Path.addLineToPoint(CGPointMake(3.94, 19.03))
        fill59Path.addCurveToPoint(CGPointMake(4.93, 16.34), controlPoint1: CGPointMake(4.44, 18.34), controlPoint2: CGPointMake(4.76, 17.45))
        fill59Path.addCurveToPoint(CGPointMake(0.1, 8.7), controlPoint1: CGPointMake(1.81, 14.93), controlPoint2: CGPointMake(0.1, 12.23))
        fill59Path.addCurveToPoint(CGPointMake(10.62, -0.03), controlPoint1: CGPointMake(0.1, 3.31), controlPoint2: CGPointMake(4.13, -0.03))
        fill59Path.addCurveToPoint(CGPointMake(21.14, 8.7), controlPoint1: CGPointMake(17.11, -0.03), controlPoint2: CGPointMake(21.14, 3.31))
        fill59Path.addCurveToPoint(CGPointMake(10.62, 17.44), controlPoint1: CGPointMake(21.14, 14.17), controlPoint2: CGPointMake(17.2, 17.44))
        fill59Path.addCurveToPoint(CGPointMake(10.18, 17.43), controlPoint1: CGPointMake(10.47, 17.44), controlPoint2: CGPointMake(10.32, 17.44))
        fill59Path.addCurveToPoint(CGPointMake(4.4, 19.95), controlPoint1: CGPointMake(9.19, 18.63), controlPoint2: CGPointMake(7.42, 19.95))
        fill59Path.addLineToPoint(CGPointMake(4.4, 19.95))
        fill59Path.closePath()
        fill59Path.miterLimit = 4;

        fill59Path.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        fill59Path.fill()
    }

    public class func drawChatButtonUntapped() {

        //// Group
        //// Fill-59 Drawing
        var fill59Path = UIBezierPath()
        fill59Path.moveToPoint(CGPointMake(4.4, 19.95))
        fill59Path.addLineToPoint(CGPointMake(3.27, 19.95))
        fill59Path.addLineToPoint(CGPointMake(3.94, 19.03))
        fill59Path.addCurveToPoint(CGPointMake(4.93, 16.34), controlPoint1: CGPointMake(4.44, 18.34), controlPoint2: CGPointMake(4.76, 17.45))
        fill59Path.addCurveToPoint(CGPointMake(0.1, 8.7), controlPoint1: CGPointMake(1.81, 14.93), controlPoint2: CGPointMake(0.1, 12.23))
        fill59Path.addCurveToPoint(CGPointMake(10.62, -0.03), controlPoint1: CGPointMake(0.1, 3.31), controlPoint2: CGPointMake(4.13, -0.03))
        fill59Path.addCurveToPoint(CGPointMake(21.14, 8.7), controlPoint1: CGPointMake(17.11, -0.03), controlPoint2: CGPointMake(21.14, 3.31))
        fill59Path.addCurveToPoint(CGPointMake(10.62, 17.44), controlPoint1: CGPointMake(21.14, 14.17), controlPoint2: CGPointMake(17.2, 17.44))
        fill59Path.addCurveToPoint(CGPointMake(10.18, 17.43), controlPoint1: CGPointMake(10.47, 17.44), controlPoint2: CGPointMake(10.32, 17.44))
        fill59Path.addCurveToPoint(CGPointMake(4.4, 19.95), controlPoint1: CGPointMake(9.19, 18.63), controlPoint2: CGPointMake(7.42, 19.95))
        fill59Path.addLineToPoint(CGPointMake(4.4, 19.95))
        fill59Path.closePath()
        fill59Path.moveToPoint(CGPointMake(10.62, 1.11))
        fill59Path.addCurveToPoint(CGPointMake(1.24, 8.73), controlPoint1: CGPointMake(4.75, 1.11), controlPoint2: CGPointMake(1.24, 3.96))
        fill59Path.addCurveToPoint(CGPointMake(5.77, 15.5), controlPoint1: CGPointMake(1.24, 12.82), controlPoint2: CGPointMake(3.7, 14.67))
        fill59Path.addLineToPoint(CGPointMake(6.17, 15.66))
        fill59Path.addLineToPoint(CGPointMake(6.13, 16.1))
        fill59Path.addCurveToPoint(CGPointMake(5.43, 18.81), controlPoint1: CGPointMake(6.01, 17.15), controlPoint2: CGPointMake(5.78, 18.05))
        fill59Path.addCurveToPoint(CGPointMake(9.46, 16.56), controlPoint1: CGPointMake(7.54, 18.54), controlPoint2: CGPointMake(8.77, 17.47))
        fill59Path.addLineToPoint(CGPointMake(9.64, 16.32))
        fill59Path.addLineToPoint(CGPointMake(10.02, 16.33))
        fill59Path.addCurveToPoint(CGPointMake(10.62, 16.35), controlPoint1: CGPointMake(10.22, 16.34), controlPoint2: CGPointMake(10.42, 16.35))
        fill59Path.addCurveToPoint(CGPointMake(19.99, 8.73), controlPoint1: CGPointMake(19.08, 16.35), controlPoint2: CGPointMake(19.99, 11.02))
        fill59Path.addCurveToPoint(CGPointMake(10.62, 1.11), controlPoint1: CGPointMake(19.99, 3.96), controlPoint2: CGPointMake(16.49, 1.11))
        fill59Path.addLineToPoint(CGPointMake(10.62, 1.11))
        fill59Path.closePath()
        fill59Path.miterLimit = 4;

        fill59Path.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        fill59Path.fill()
    }

    public class func drawProfileButtonTapped() {

        //// Group
        //// Filled Drawing
        var filledPath = UIBezierPath()
        filledPath.moveToPoint(CGPointMake(7.46, 11.09))
        filledPath.addCurveToPoint(CGPointMake(12.53, 6.06), controlPoint1: CGPointMake(10.26, 11.09), controlPoint2: CGPointMake(12.53, 8.83))
        filledPath.addCurveToPoint(CGPointMake(7.46, 1.03), controlPoint1: CGPointMake(12.53, 3.29), controlPoint2: CGPointMake(10.26, 1.03))
        filledPath.addCurveToPoint(CGPointMake(2.39, 6.06), controlPoint1: CGPointMake(4.67, 1.03), controlPoint2: CGPointMake(2.39, 3.29))
        filledPath.addCurveToPoint(CGPointMake(7.46, 11.09), controlPoint1: CGPointMake(2.39, 8.83), controlPoint2: CGPointMake(4.67, 11.09))
        filledPath.closePath()
        filledPath.moveToPoint(CGPointMake(12.71, 13.72))
        filledPath.addCurveToPoint(CGPointMake(8.54, 11.83), controlPoint1: CGPointMake(11.39, 11.55), controlPoint2: CGPointMake(8.62, 11.82))
        filledPath.addLineToPoint(CGPointMake(6.29, 11.83))
        filledPath.addCurveToPoint(CGPointMake(2.66, 13.64), controlPoint1: CGPointMake(6.2, 11.83), controlPoint2: CGPointMake(3.96, 11.77))
        filledPath.addCurveToPoint(CGPointMake(0.49, 20.28), controlPoint1: CGPointMake(1.93, 14.67), controlPoint2: CGPointMake(0.87, 18.63))
        filledPath.addCurveToPoint(CGPointMake(0.76, 20.7), controlPoint1: CGPointMake(0.45, 20.47), controlPoint2: CGPointMake(0.57, 20.66))
        filledPath.addCurveToPoint(CGPointMake(14.64, 20.71), controlPoint1: CGPointMake(0.96, 20.75), controlPoint2: CGPointMake(14.48, 20.71))
        filledPath.addCurveToPoint(CGPointMake(14.99, 20.28), controlPoint1: CGPointMake(14.67, 20.71), controlPoint2: CGPointMake(15.04, 20.47))
        filledPath.addCurveToPoint(CGPointMake(12.71, 13.72), controlPoint1: CGPointMake(14.67, 18.9), controlPoint2: CGPointMake(13.55, 14.81))
        filledPath.closePath()
        filledPath.miterLimit = 4;

        filledPath.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        filledPath.fill()
        AssetsKit.themeColor.setStroke()
        filledPath.lineWidth = 0.5
        filledPath.stroke()
    }

    public class func drawProfileButtonUntapped() {

        //// Group
        //// Unfilled Drawing
        var unfilledPath = UIBezierPath()
        unfilledPath.moveToPoint(CGPointMake(7.46, 11.09))
        unfilledPath.addCurveToPoint(CGPointMake(12.53, 6.06), controlPoint1: CGPointMake(10.26, 11.09), controlPoint2: CGPointMake(12.53, 8.83))
        unfilledPath.addCurveToPoint(CGPointMake(7.46, 1.03), controlPoint1: CGPointMake(12.53, 3.29), controlPoint2: CGPointMake(10.26, 1.03))
        unfilledPath.addCurveToPoint(CGPointMake(2.39, 6.06), controlPoint1: CGPointMake(4.67, 1.03), controlPoint2: CGPointMake(2.39, 3.29))
        unfilledPath.addCurveToPoint(CGPointMake(7.46, 11.09), controlPoint1: CGPointMake(2.39, 8.83), controlPoint2: CGPointMake(4.67, 11.09))
        unfilledPath.addLineToPoint(CGPointMake(7.46, 11.09))
        unfilledPath.closePath()
        unfilledPath.moveToPoint(CGPointMake(7.46, 1.75))
        unfilledPath.addCurveToPoint(CGPointMake(11.81, 6.06), controlPoint1: CGPointMake(9.86, 1.75), controlPoint2: CGPointMake(11.81, 3.68))
        unfilledPath.addCurveToPoint(CGPointMake(7.46, 10.37), controlPoint1: CGPointMake(11.81, 8.44), controlPoint2: CGPointMake(9.86, 10.37))
        unfilledPath.addCurveToPoint(CGPointMake(3.11, 6.06), controlPoint1: CGPointMake(5.06, 10.37), controlPoint2: CGPointMake(3.11, 8.44))
        unfilledPath.addCurveToPoint(CGPointMake(7.46, 1.75), controlPoint1: CGPointMake(3.11, 3.68), controlPoint2: CGPointMake(5.06, 1.75))
        unfilledPath.addLineToPoint(CGPointMake(7.46, 1.75))
        unfilledPath.closePath()
        unfilledPath.moveToPoint(CGPointMake(14.99, 20.28))
        unfilledPath.addCurveToPoint(CGPointMake(12.71, 13.72), controlPoint1: CGPointMake(14.67, 18.9), controlPoint2: CGPointMake(13.55, 14.81))
        unfilledPath.addCurveToPoint(CGPointMake(8.54, 11.83), controlPoint1: CGPointMake(11.39, 11.55), controlPoint2: CGPointMake(8.62, 11.82))
        unfilledPath.addLineToPoint(CGPointMake(6.29, 11.83))
        unfilledPath.addCurveToPoint(CGPointMake(2.66, 13.64), controlPoint1: CGPointMake(6.2, 11.83), controlPoint2: CGPointMake(3.96, 11.77))
        unfilledPath.addCurveToPoint(CGPointMake(0.49, 20.28), controlPoint1: CGPointMake(1.93, 14.67), controlPoint2: CGPointMake(0.87, 18.63))
        unfilledPath.addCurveToPoint(CGPointMake(0.76, 20.7), controlPoint1: CGPointMake(0.45, 20.47), controlPoint2: CGPointMake(0.57, 20.66))
        unfilledPath.addCurveToPoint(CGPointMake(1.2, 20.43), controlPoint1: CGPointMake(0.96, 20.75), controlPoint2: CGPointMake(1.15, 20.63))
        unfilledPath.addCurveToPoint(CGPointMake(3.25, 14.04), controlPoint1: CGPointMake(1.59, 18.7), controlPoint2: CGPointMake(2.63, 14.93))
        unfilledPath.addCurveToPoint(CGPointMake(6.28, 12.55), controlPoint1: CGPointMake(4.33, 12.51), controlPoint2: CGPointMake(6.25, 12.55))
        unfilledPath.addLineToPoint(CGPointMake(8.58, 12.54))
        unfilledPath.addCurveToPoint(CGPointMake(12.1, 14.11), controlPoint1: CGPointMake(8.61, 12.54), controlPoint2: CGPointMake(11.02, 12.31))
        unfilledPath.addCurveToPoint(CGPointMake(12.12, 14.15), controlPoint1: CGPointMake(12.11, 14.12), controlPoint2: CGPointMake(12.11, 14.13))
        unfilledPath.addCurveToPoint(CGPointMake(14.29, 20.44), controlPoint1: CGPointMake(12.78, 14.97), controlPoint2: CGPointMake(13.88, 18.68))
        unfilledPath.addCurveToPoint(CGPointMake(14.64, 20.71), controlPoint1: CGPointMake(14.33, 20.6), controlPoint2: CGPointMake(14.48, 20.71))
        unfilledPath.addCurveToPoint(CGPointMake(14.72, 20.7), controlPoint1: CGPointMake(14.67, 20.71), controlPoint2: CGPointMake(14.7, 20.71))
        unfilledPath.addCurveToPoint(CGPointMake(14.99, 20.28), controlPoint1: CGPointMake(14.92, 20.66), controlPoint2: CGPointMake(15.04, 20.47))
        unfilledPath.addLineToPoint(CGPointMake(14.99, 20.28))
        unfilledPath.closePath()
        unfilledPath.miterLimit = 4;

        unfilledPath.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        unfilledPath.fill()
        AssetsKit.bottomBarButtonUntapped.setStroke()
        unfilledPath.lineWidth = 0.5
        unfilledPath.stroke()
    }

    public class func drawNavBarSearchButton() {

        //// Group
        //// Fill-139 Drawing
        var fill139Path = UIBezierPath()
        fill139Path.moveToPoint(CGPointMake(18.56, 18.46))
        fill139Path.addLineToPoint(CGPointMake(12.21, 12.11))
        fill139Path.addCurveToPoint(CGPointMake(13.99, 7.61), controlPoint1: CGPointMake(13.31, 10.93), controlPoint2: CGPointMake(13.99, 9.35))
        fill139Path.addCurveToPoint(CGPointMake(7.38, 1), controlPoint1: CGPointMake(13.99, 3.97), controlPoint2: CGPointMake(11.03, 1))
        fill139Path.addCurveToPoint(CGPointMake(0.77, 7.61), controlPoint1: CGPointMake(3.73, 1), controlPoint2: CGPointMake(0.77, 3.97))
        fill139Path.addCurveToPoint(CGPointMake(7.38, 14.22), controlPoint1: CGPointMake(0.77, 11.26), controlPoint2: CGPointMake(3.73, 14.22))
        fill139Path.addCurveToPoint(CGPointMake(11.76, 12.55), controlPoint1: CGPointMake(9.06, 14.22), controlPoint2: CGPointMake(10.59, 13.59))
        fill139Path.addLineToPoint(CGPointMake(18.12, 18.91))
        fill139Path.addCurveToPoint(CGPointMake(18.34, 19), controlPoint1: CGPointMake(18.18, 18.97), controlPoint2: CGPointMake(18.26, 19))
        fill139Path.addCurveToPoint(CGPointMake(18.56, 18.91), controlPoint1: CGPointMake(18.42, 19), controlPoint2: CGPointMake(18.5, 18.97))
        fill139Path.addCurveToPoint(CGPointMake(18.56, 18.46), controlPoint1: CGPointMake(18.69, 18.78), controlPoint2: CGPointMake(18.69, 18.58))
        fill139Path.addLineToPoint(CGPointMake(18.56, 18.46))
        fill139Path.closePath()
        fill139Path.moveToPoint(CGPointMake(7.38, 13.59))
        fill139Path.addCurveToPoint(CGPointMake(1.4, 7.61), controlPoint1: CGPointMake(4.08, 13.59), controlPoint2: CGPointMake(1.4, 10.91))
        fill139Path.addCurveToPoint(CGPointMake(7.38, 1.63), controlPoint1: CGPointMake(1.4, 4.31), controlPoint2: CGPointMake(4.08, 1.63))
        fill139Path.addCurveToPoint(CGPointMake(13.36, 7.61), controlPoint1: CGPointMake(10.68, 1.63), controlPoint2: CGPointMake(13.36, 4.31))
        fill139Path.addCurveToPoint(CGPointMake(7.38, 13.59), controlPoint1: CGPointMake(13.36, 10.91), controlPoint2: CGPointMake(10.68, 13.59))
        fill139Path.addLineToPoint(CGPointMake(7.38, 13.59))
        fill139Path.closePath()
        fill139Path.miterLimit = 4;

        fill139Path.usesEvenOddFillRule = true;

        AssetsKit.iconUntapped.setFill()
        fill139Path.fill()
        AssetsKit.iconUntapped.setStroke()
        fill139Path.lineWidth = 1
        fill139Path.stroke()
    }

    public class func drawNavbarFilterButton() {

        //// Group
        //// Fill-1 Drawing
        var fill1Path = UIBezierPath()
        fill1Path.moveToPoint(CGPointMake(9.99, 0.52))
        fill1Path.addCurveToPoint(CGPointMake(0, 3.63), controlPoint1: CGPointMake(4.47, 0.52), controlPoint2: CGPointMake(0, 1.91))
        fill1Path.addLineToPoint(CGPointMake(0, 5.5))
        fill1Path.addLineToPoint(CGPointMake(7.49, 12.98))
        fill1Path.addLineToPoint(CGPointMake(7.49, 19.21))
        fill1Path.addCurveToPoint(CGPointMake(9.99, 20.45), controlPoint1: CGPointMake(7.49, 19.89), controlPoint2: CGPointMake(8.61, 20.45))
        fill1Path.addCurveToPoint(CGPointMake(12.49, 19.21), controlPoint1: CGPointMake(11.37, 20.45), controlPoint2: CGPointMake(12.49, 19.89))
        fill1Path.addLineToPoint(CGPointMake(12.49, 12.98))
        fill1Path.addLineToPoint(CGPointMake(19.98, 5.5))
        fill1Path.addLineToPoint(CGPointMake(19.98, 3.63))
        fill1Path.addCurveToPoint(CGPointMake(9.99, 0.52), controlPoint1: CGPointMake(19.98, 1.91), controlPoint2: CGPointMake(15.51, 0.52))
        fill1Path.addLineToPoint(CGPointMake(9.99, 0.52))
        fill1Path.closePath()
        fill1Path.moveToPoint(CGPointMake(3.74, 3))
        fill1Path.addCurveToPoint(CGPointMake(9.98, 2.06), controlPoint1: CGPointMake(5.45, 2.39), controlPoint2: CGPointMake(7.67, 2.06))
        fill1Path.addCurveToPoint(CGPointMake(16.23, 3), controlPoint1: CGPointMake(12.29, 2.06), controlPoint2: CGPointMake(14.51, 2.39))
        fill1Path.addCurveToPoint(CGPointMake(18.12, 3.94), controlPoint1: CGPointMake(17, 3.27), controlPoint2: CGPointMake(17.66, 3.6))
        fill1Path.addCurveToPoint(CGPointMake(18.67, 4.48), controlPoint1: CGPointMake(18.43, 4.17), controlPoint2: CGPointMake(18.6, 4.36))
        fill1Path.addCurveToPoint(CGPointMake(18.12, 5.01), controlPoint1: CGPointMake(18.6, 4.59), controlPoint2: CGPointMake(18.43, 4.78))
        fill1Path.addCurveToPoint(CGPointMake(16.23, 5.96), controlPoint1: CGPointMake(17.66, 5.36), controlPoint2: CGPointMake(17, 5.68))
        fill1Path.addCurveToPoint(CGPointMake(9.98, 6.9), controlPoint1: CGPointMake(14.51, 6.57), controlPoint2: CGPointMake(12.29, 6.9))
        fill1Path.addCurveToPoint(CGPointMake(3.74, 5.96), controlPoint1: CGPointMake(7.67, 6.9), controlPoint2: CGPointMake(5.45, 6.57))
        fill1Path.addCurveToPoint(CGPointMake(1.84, 5.01), controlPoint1: CGPointMake(2.96, 5.68), controlPoint2: CGPointMake(2.31, 5.36))
        fill1Path.addCurveToPoint(CGPointMake(1.29, 4.48), controlPoint1: CGPointMake(1.53, 4.78), controlPoint2: CGPointMake(1.37, 4.59))
        fill1Path.addCurveToPoint(CGPointMake(1.84, 3.94), controlPoint1: CGPointMake(1.37, 4.36), controlPoint2: CGPointMake(1.53, 4.17))
        fill1Path.addCurveToPoint(CGPointMake(3.74, 3), controlPoint1: CGPointMake(1.84, 3.94), controlPoint2: CGPointMake(2.96, 3.27))
        fill1Path.closePath()
        fill1Path.miterLimit = 4;

        fill1Path.usesEvenOddFillRule = true;

        AssetsKit.iconUntapped.setFill()
        fill1Path.fill()
    }

    //// Generated Images

    public class var imageOfFemaleIcon: UIImage {
        if Cache.imageOfFemaleIcon != nil {
            return Cache.imageOfFemaleIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(36, 40), false, 0)
            AssetsKit.drawFemaleIcon()

        Cache.imageOfFemaleIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfFemaleIcon!
    }

    public class var imageOfMaleIcon: UIImage {
        if Cache.imageOfMaleIcon != nil {
            return Cache.imageOfMaleIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(37, 40), false, 0)
            AssetsKit.drawMaleIcon()

        Cache.imageOfMaleIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMaleIcon!
    }

    public class var imageOfCakeIcon: UIImage {
        if Cache.imageOfCakeIcon != nil {
            return Cache.imageOfCakeIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(45, 36), false, 0)
            AssetsKit.drawCakeIcon()

        Cache.imageOfCakeIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCakeIcon!
    }

    public class func imageOfFlameIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(32, 34), false, 0)
            AssetsKit.drawFlameIcon(scale: scale)

        let imageOfFlameIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfFlameIcon
    }

    public class var imageOfCarIcon: UIImage {
        if Cache.imageOfCarIcon != nil {
            return Cache.imageOfCarIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(31, 24), false, 0)
            AssetsKit.drawCarIcon()

        Cache.imageOfCarIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCarIcon!
    }

    public class var imageOfEtcIcon: UIImage {
        if Cache.imageOfEtcIcon != nil {
            return Cache.imageOfEtcIcon!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(90, 25), false, 0)
            AssetsKit.drawEtcIcon()

        Cache.imageOfEtcIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfEtcIcon!
    }

    public class var imageOfWTGButtonTapped: UIImage {
        if Cache.imageOfWTGButtonTapped != nil {
            return Cache.imageOfWTGButtonTapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(135, 145), false, 0)
            AssetsKit.drawWTGButtonTapped()

        Cache.imageOfWTGButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWTGButtonTapped!
    }

    public class var imageOfWTGButtonUntapped: UIImage {
        if Cache.imageOfWTGButtonUntapped != nil {
            return Cache.imageOfWTGButtonUntapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(135, 145), false, 0)
            AssetsKit.drawWTGButtonUntapped()

        Cache.imageOfWTGButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWTGButtonUntapped!
    }

    public class var imageOfPriceTagBackground: UIImage {
        if Cache.imageOfPriceTagBackground != nil {
            return Cache.imageOfPriceTagBackground!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(218, 76), false, 0)
            AssetsKit.drawPriceTagBackground()

        Cache.imageOfPriceTagBackground = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfPriceTagBackground!
    }

    public class var imageOfHomeButtonTapped: UIImage {
        if Cache.imageOfHomeButtonTapped != nil {
            return Cache.imageOfHomeButtonTapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(24, 24), false, 0)
            AssetsKit.drawHomeButtonTapped()

        Cache.imageOfHomeButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfHomeButtonTapped!
    }

    public class var imageOfHomeButtonUntapped: UIImage {
        if Cache.imageOfHomeButtonUntapped != nil {
            return Cache.imageOfHomeButtonUntapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(24, 23), false, 0)
            AssetsKit.drawHomeButtonUntapped()

        Cache.imageOfHomeButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfHomeButtonUntapped!
    }

    public class var imageOfNearbyButtonTapped: UIImage {
        if Cache.imageOfNearbyButtonTapped != nil {
            return Cache.imageOfNearbyButtonTapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(15, 21), false, 0)
            AssetsKit.drawNearbyButtonTapped()

        Cache.imageOfNearbyButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNearbyButtonTapped!
    }

    public class var imageOfNearbyButtonUntapped: UIImage {
        if Cache.imageOfNearbyButtonUntapped != nil {
            return Cache.imageOfNearbyButtonUntapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(15, 21), false, 0)
            AssetsKit.drawNearbyButtonUntapped()

        Cache.imageOfNearbyButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNearbyButtonUntapped!
    }

    public class var imageOfChatButtonTapped: UIImage {
        if Cache.imageOfChatButtonTapped != nil {
            return Cache.imageOfChatButtonTapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(22, 20), false, 0)
            AssetsKit.drawChatButtonTapped()

        Cache.imageOfChatButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfChatButtonTapped!
    }

    public class var imageOfChatButtonUntapped: UIImage {
        if Cache.imageOfChatButtonUntapped != nil {
            return Cache.imageOfChatButtonUntapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(21, 20), false, 0)
            AssetsKit.drawChatButtonUntapped()

        Cache.imageOfChatButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfChatButtonUntapped!
    }

    public class var imageOfProfileButtonTapped: UIImage {
        if Cache.imageOfProfileButtonTapped != nil {
            return Cache.imageOfProfileButtonTapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 21), false, 0)
            AssetsKit.drawProfileButtonTapped()

        Cache.imageOfProfileButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfProfileButtonTapped!
    }

    public class var imageOfProfileButtonUntapped: UIImage {
        if Cache.imageOfProfileButtonUntapped != nil {
            return Cache.imageOfProfileButtonUntapped!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 21), false, 0)
            AssetsKit.drawProfileButtonUntapped()

        Cache.imageOfProfileButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfProfileButtonUntapped!
    }

    public class var imageOfNavBarSearchButton: UIImage {
        if Cache.imageOfNavBarSearchButton != nil {
            return Cache.imageOfNavBarSearchButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(19, 19), false, 0)
            AssetsKit.drawNavBarSearchButton()

        Cache.imageOfNavBarSearchButton = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNavBarSearchButton!
    }

    public class var imageOfNavbarFilterButton: UIImage {
        if Cache.imageOfNavbarFilterButton != nil {
            return Cache.imageOfNavbarFilterButton!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(20, 21), false, 0)
            AssetsKit.drawNavbarFilterButton()

        Cache.imageOfNavbarFilterButton = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfNavbarFilterButton!
    }

    //// Customization Infrastructure

    @IBOutlet var femaleIconTargets: [AnyObject]! {
        get { return Cache.femaleIconTargets }
        set {
            Cache.femaleIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfFemaleIcon)
            }
        }
    }

    @IBOutlet var maleIconTargets: [AnyObject]! {
        get { return Cache.maleIconTargets }
        set {
            Cache.maleIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfMaleIcon)
            }
        }
    }

    @IBOutlet var cakeIconTargets: [AnyObject]! {
        get { return Cache.cakeIconTargets }
        set {
            Cache.cakeIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfCakeIcon)
            }
        }
    }

    @IBOutlet var carIconTargets: [AnyObject]! {
        get { return Cache.carIconTargets }
        set {
            Cache.carIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfCarIcon)
            }
        }
    }

    @IBOutlet var etcIconTargets: [AnyObject]! {
        get { return Cache.etcIconTargets }
        set {
            Cache.etcIconTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfEtcIcon)
            }
        }
    }

    @IBOutlet var wTGButtonTappedTargets: [AnyObject]! {
        get { return Cache.wTGButtonTappedTargets }
        set {
            Cache.wTGButtonTappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfWTGButtonTapped)
            }
        }
    }

    @IBOutlet var wTGButtonUntappedTargets: [AnyObject]! {
        get { return Cache.wTGButtonUntappedTargets }
        set {
            Cache.wTGButtonUntappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfWTGButtonUntapped)
            }
        }
    }

    @IBOutlet var priceTagBackgroundTargets: [AnyObject]! {
        get { return Cache.priceTagBackgroundTargets }
        set {
            Cache.priceTagBackgroundTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfPriceTagBackground)
            }
        }
    }

    @IBOutlet var homeButtonTappedTargets: [AnyObject]! {
        get { return Cache.homeButtonTappedTargets }
        set {
            Cache.homeButtonTappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfHomeButtonTapped)
            }
        }
    }

    @IBOutlet var homeButtonUntappedTargets: [AnyObject]! {
        get { return Cache.homeButtonUntappedTargets }
        set {
            Cache.homeButtonUntappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfHomeButtonUntapped)
            }
        }
    }

    @IBOutlet var nearbyButtonTappedTargets: [AnyObject]! {
        get { return Cache.nearbyButtonTappedTargets }
        set {
            Cache.nearbyButtonTappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfNearbyButtonTapped)
            }
        }
    }

    @IBOutlet var nearbyButtonUntappedTargets: [AnyObject]! {
        get { return Cache.nearbyButtonUntappedTargets }
        set {
            Cache.nearbyButtonUntappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfNearbyButtonUntapped)
            }
        }
    }

    @IBOutlet var chatButtonTappedTargets: [AnyObject]! {
        get { return Cache.chatButtonTappedTargets }
        set {
            Cache.chatButtonTappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfChatButtonTapped)
            }
        }
    }

    @IBOutlet var chatButtonUntappedTargets: [AnyObject]! {
        get { return Cache.chatButtonUntappedTargets }
        set {
            Cache.chatButtonUntappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfChatButtonUntapped)
            }
        }
    }

    @IBOutlet var profileButtonTappedTargets: [AnyObject]! {
        get { return Cache.profileButtonTappedTargets }
        set {
            Cache.profileButtonTappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfProfileButtonTapped)
            }
        }
    }

    @IBOutlet var profileButtonUntappedTargets: [AnyObject]! {
        get { return Cache.profileButtonUntappedTargets }
        set {
            Cache.profileButtonUntappedTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfProfileButtonUntapped)
            }
        }
    }

    @IBOutlet var navBarSearchButtonTargets: [AnyObject]! {
        get { return Cache.navBarSearchButtonTargets }
        set {
            Cache.navBarSearchButtonTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfNavBarSearchButton)
            }
        }
    }

    @IBOutlet var navbarFilterButtonTargets: [AnyObject]! {
        get { return Cache.navbarFilterButtonTargets }
        set {
            Cache.navbarFilterButtonTargets = newValue
            for target: AnyObject in newValue {
                target.setImage(AssetsKit.imageOfNavbarFilterButton)
            }
        }
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
