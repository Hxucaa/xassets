//
//  AssetsKit.swift
//  XAssets
//
//  Created by Connor Wang on 2015-08-24.
//  Copyright (c) 2015 ZenChat. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class AssetsKit : NSObject {

    //// Cache

    private struct Cache {
        static var femaleIconFill: UIColor = UIColor(red: 1.000, green: 0.384, blue: 0.659, alpha: 1.000)
        static var maleIconFill: UIColor = UIColor(red: 0.157, green: 0.302, blue: 0.608, alpha: 1.000)
        static var iconUntapped: UIColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        static var themeColor: UIColor = UIColor(red: 0.000, green: 0.698, blue: 0.675, alpha: 1.000)
        static var flameColor: UIColor = UIColor(red: 0.973, green: 0.278, blue: 0.059, alpha: 1.000)
        static var carIconColor: UIColor = UIColor(red: 0.961, green: 0.651, blue: 0.137, alpha: 1.000)
        static var etcColor: UIColor = UIColor(red: 0.796, green: 0.796, blue: 0.796, alpha: 1.000)
        static var priceTagColor: UIColor = UIColor(red: 0.686, green: 0.686, blue: 0.686, alpha: 1.000)
        static var bottomBarButtonUntapped: UIColor = UIColor(red: 0.447, green: 0.447, blue: 0.447, alpha: 1.000)
    }

    //// Colors

    public class var femaleIconFill: UIColor { return Cache.femaleIconFill }
    public class var maleIconFill: UIColor { return Cache.maleIconFill }
    public class var iconUntapped: UIColor { return Cache.iconUntapped }
    public class var themeColor: UIColor { return Cache.themeColor }
    public class var flameColor: UIColor { return Cache.flameColor }
    public class var carIconColor: UIColor { return Cache.carIconColor }
    public class var etcColor: UIColor { return Cache.etcColor }
    public class var priceTagColor: UIColor { return Cache.priceTagColor }
    public class var bottomBarButtonUntapped: UIColor { return Cache.bottomBarButtonUntapped }

    //// Drawing Methods

    public class func drawFemaleIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 1, 0.7)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(17.37, 2.98))
        bezierPath.addCurveToPoint(CGPointMake(13.33, 3.44), controlPoint1: CGPointMake(15.98, 2.98), controlPoint2: CGPointMake(14.63, 3.15))
        bezierPath.addCurveToPoint(CGPointMake(17.37, 0), controlPoint1: CGPointMake(13.55, 1.51), controlPoint2: CGPointMake(15.27, 0))
        bezierPath.addCurveToPoint(CGPointMake(21.42, 3.44), controlPoint1: CGPointMake(19.48, 0), controlPoint2: CGPointMake(21.2, 1.51))
        bezierPath.addCurveToPoint(CGPointMake(17.37, 2.98), controlPoint1: CGPointMake(20.12, 3.15), controlPoint2: CGPointMake(18.78, 2.98))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(17.37, 26.87))
        bezierPath.addCurveToPoint(CGPointMake(15.38, 27.62), controlPoint1: CGPointMake(16.27, 26.87), controlPoint2: CGPointMake(15.38, 27.2))
        bezierPath.addCurveToPoint(CGPointMake(17.37, 28.37), controlPoint1: CGPointMake(15.38, 28.04), controlPoint2: CGPointMake(16.27, 28.37))
        bezierPath.addCurveToPoint(CGPointMake(19.37, 27.62), controlPoint1: CGPointMake(18.48, 28.37), controlPoint2: CGPointMake(19.37, 28.04))
        bezierPath.addCurveToPoint(CGPointMake(17.37, 26.87), controlPoint1: CGPointMake(19.37, 27.2), controlPoint2: CGPointMake(18.48, 26.87))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(34.75, 25.64))
        bezierPath.addCurveToPoint(CGPointMake(31.19, 30.52), controlPoint1: CGPointMake(34.75, 27.91), controlPoint2: CGPointMake(33.26, 29.84))
        bezierPath.addCurveToPoint(CGPointMake(17.4, 38.3), controlPoint1: CGPointMake(28.54, 35.25), controlPoint2: CGPointMake(23.26, 38.3))
        bezierPath.addCurveToPoint(CGPointMake(3.63, 30.54), controlPoint1: CGPointMake(11.55, 38.3), controlPoint2: CGPointMake(6.28, 35.26))
        bezierPath.addCurveToPoint(CGPointMake(0, 25.64), controlPoint1: CGPointMake(1.53, 29.88), controlPoint2: CGPointMake(0, 27.93))
        bezierPath.addCurveToPoint(CGPointMake(1.74, 21.82), controlPoint1: CGPointMake(0, 24.12), controlPoint2: CGPointMake(0.68, 22.76))
        bezierPath.addCurveToPoint(CGPointMake(1.32, 18.55), controlPoint1: CGPointMake(1.48, 20.77), controlPoint2: CGPointMake(1.32, 19.67))
        bezierPath.addCurveToPoint(CGPointMake(17.37, 3.86), controlPoint1: CGPointMake(1.32, 10.45), controlPoint2: CGPointMake(8.53, 3.86))
        bezierPath.addCurveToPoint(CGPointMake(33.43, 18.55), controlPoint1: CGPointMake(26.23, 3.86), controlPoint2: CGPointMake(33.43, 10.45))
        bezierPath.addCurveToPoint(CGPointMake(33.01, 21.82), controlPoint1: CGPointMake(33.43, 19.67), controlPoint2: CGPointMake(33.28, 20.77))
        bezierPath.addCurveToPoint(CGPointMake(34.75, 25.64), controlPoint1: CGPointMake(34.08, 22.76), controlPoint2: CGPointMake(34.75, 24.12))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(31.36, 25.64))
        bezierPath.addCurveToPoint(CGPointMake(29.57, 23.71), controlPoint1: CGPointMake(31.36, 24.58), controlPoint2: CGPointMake(30.56, 23.71))
        bezierPath.addCurveToPoint(CGPointMake(28.63, 24.98), controlPoint1: CGPointMake(29.3, 24.15), controlPoint2: CGPointMake(28.98, 24.58))
        bezierPath.addCurveToPoint(CGPointMake(29.13, 21.91), controlPoint1: CGPointMake(28.94, 23.97), controlPoint2: CGPointMake(29.11, 22.94))
        bezierPath.addCurveToPoint(CGPointMake(21.68, 18.58), controlPoint1: CGPointMake(27.07, 21.89), controlPoint2: CGPointMake(24.23, 20.7))
        bezierPath.addCurveToPoint(CGPointMake(17.38, 12.84), controlPoint1: CGPointMake(19.45, 16.75), controlPoint2: CGPointMake(17.93, 14.62))
        bezierPath.addCurveToPoint(CGPointMake(13.08, 18.58), controlPoint1: CGPointMake(16.82, 14.62), controlPoint2: CGPointMake(15.31, 16.75))
        bezierPath.addCurveToPoint(CGPointMake(5.62, 21.91), controlPoint1: CGPointMake(10.52, 20.7), controlPoint2: CGPointMake(7.69, 21.89))
        bezierPath.addCurveToPoint(CGPointMake(6.13, 24.98), controlPoint1: CGPointMake(5.64, 22.94), controlPoint2: CGPointMake(5.81, 23.97))
        bezierPath.addCurveToPoint(CGPointMake(5.19, 23.71), controlPoint1: CGPointMake(5.77, 24.58), controlPoint2: CGPointMake(5.45, 24.15))
        bezierPath.addCurveToPoint(CGPointMake(3.39, 25.64), controlPoint1: CGPointMake(4.19, 23.71), controlPoint2: CGPointMake(3.39, 24.58))
        bezierPath.addCurveToPoint(CGPointMake(5.19, 27.57), controlPoint1: CGPointMake(3.39, 26.71), controlPoint2: CGPointMake(4.19, 27.57))
        bezierPath.addCurveToPoint(CGPointMake(5.89, 27.42), controlPoint1: CGPointMake(5.43, 27.57), controlPoint2: CGPointMake(5.67, 27.52))
        bezierPath.addCurveToPoint(CGPointMake(17.4, 35.1), controlPoint1: CGPointMake(7.51, 31.88), controlPoint2: CGPointMake(12.05, 35.1))
        bezierPath.addCurveToPoint(CGPointMake(28.91, 27.43), controlPoint1: CGPointMake(22.75, 35.1), controlPoint2: CGPointMake(27.29, 31.89))
        bezierPath.addCurveToPoint(CGPointMake(29.57, 27.57), controlPoint1: CGPointMake(29.12, 27.52), controlPoint2: CGPointMake(29.34, 27.57))
        bezierPath.addCurveToPoint(CGPointMake(31.36, 25.64), controlPoint1: CGPointMake(30.56, 27.57), controlPoint2: CGPointMake(31.36, 26.71))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(11.95, 21.28))
        bezierPath.addCurveToPoint(CGPointMake(10.13, 23), controlPoint1: CGPointMake(10.94, 21.28), controlPoint2: CGPointMake(10.13, 22.06))
        bezierPath.addCurveToPoint(CGPointMake(11.95, 24.72), controlPoint1: CGPointMake(10.13, 23.95), controlPoint2: CGPointMake(10.94, 24.72))
        bezierPath.addCurveToPoint(CGPointMake(13.77, 23), controlPoint1: CGPointMake(12.95, 24.72), controlPoint2: CGPointMake(13.77, 23.95))
        bezierPath.addCurveToPoint(CGPointMake(11.95, 21.28), controlPoint1: CGPointMake(13.77, 22.06), controlPoint2: CGPointMake(12.96, 21.28))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(22.8, 21.28))
        bezierPath.addCurveToPoint(CGPointMake(20.98, 23), controlPoint1: CGPointMake(21.8, 21.28), controlPoint2: CGPointMake(20.98, 22.06))
        bezierPath.addCurveToPoint(CGPointMake(22.8, 24.72), controlPoint1: CGPointMake(20.98, 23.95), controlPoint2: CGPointMake(21.8, 24.72))
        bezierPath.addCurveToPoint(CGPointMake(24.62, 23), controlPoint1: CGPointMake(23.81, 24.72), controlPoint2: CGPointMake(24.62, 23.95))
        bezierPath.addCurveToPoint(CGPointMake(22.8, 21.28), controlPoint1: CGPointMake(24.63, 22.06), controlPoint2: CGPointMake(23.81, 21.28))
        bezierPath.closePath()
        AssetsKit.femaleIconFill.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawMaleIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 1, 0.9)
        CGContextScaleCTM(context, scale, scale)

        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(34.27, 20.66))
        bezier2Path.addLineToPoint(CGPointMake(34.27, 13.42))
        bezier2Path.addCurveToPoint(CGPointMake(34.17, 12.02), controlPoint1: CGPointMake(34.27, 12.92), controlPoint2: CGPointMake(34.23, 12.46))
        bezier2Path.addCurveToPoint(CGPointMake(34.15, 11.82), controlPoint1: CGPointMake(34.16, 11.95), controlPoint2: CGPointMake(34.16, 11.9))
        bezier2Path.addCurveToPoint(CGPointMake(34.1, 11.64), controlPoint1: CGPointMake(34.14, 11.76), controlPoint2: CGPointMake(34.12, 11.7))
        bezier2Path.addCurveToPoint(CGPointMake(33.59, 9.95), controlPoint1: CGPointMake(33.99, 11.01), controlPoint2: CGPointMake(33.82, 10.45))
        bezier2Path.addCurveToPoint(CGPointMake(20.72, 0.27), controlPoint1: CGPointMake(31.78, 5.57), controlPoint2: CGPointMake(26.64, 1.45))
        bezier2Path.addCurveToPoint(CGPointMake(6.12, 6.52), controlPoint1: CGPointMake(14.42, -0.99), controlPoint2: CGPointMake(7.71, 2.36))
        bezier2Path.addCurveToPoint(CGPointMake(1.13, 13.42), controlPoint1: CGPointMake(3.11, 7.43), controlPoint2: CGPointMake(1.13, 9.39))
        bezier2Path.addLineToPoint(CGPointMake(1.13, 20.66))
        bezier2Path.addCurveToPoint(CGPointMake(0, 24.12), controlPoint1: CGPointMake(0.43, 21.61), controlPoint2: CGPointMake(0, 22.81))
        bezier2Path.addCurveToPoint(CGPointMake(3.67, 29.43), controlPoint1: CGPointMake(0, 26.63), controlPoint2: CGPointMake(1.55, 28.75))
        bezier2Path.addCurveToPoint(CGPointMake(17.73, 38.1), controlPoint1: CGPointMake(6.36, 34.7), controlPoint2: CGPointMake(11.75, 38.1))
        bezier2Path.addCurveToPoint(CGPointMake(31.79, 29.41), controlPoint1: CGPointMake(23.71, 38.1), controlPoint2: CGPointMake(29.1, 34.69))
        bezier2Path.addCurveToPoint(CGPointMake(35.4, 24.12), controlPoint1: CGPointMake(33.88, 28.71), controlPoint2: CGPointMake(35.4, 26.6))
        bezier2Path.addCurveToPoint(CGPointMake(34.27, 20.66), controlPoint1: CGPointMake(35.4, 22.81), controlPoint2: CGPointMake(34.97, 21.61))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(30.26, 26.28))
        bezier2Path.addCurveToPoint(CGPointMake(29.59, 26.13), controlPoint1: CGPointMake(30.02, 26.28), controlPoint2: CGPointMake(29.8, 26.23))
        bezier2Path.addCurveToPoint(CGPointMake(17.73, 34.72), controlPoint1: CGPointMake(27.91, 31.12), controlPoint2: CGPointMake(23.24, 34.72))
        bezier2Path.addCurveToPoint(CGPointMake(5.86, 26.11), controlPoint1: CGPointMake(12.21, 34.72), controlPoint2: CGPointMake(7.53, 31.12))
        bezier2Path.addCurveToPoint(CGPointMake(5.14, 26.28), controlPoint1: CGPointMake(5.64, 26.22), controlPoint2: CGPointMake(5.39, 26.28))
        bezier2Path.addCurveToPoint(CGPointMake(3.3, 24.12), controlPoint1: CGPointMake(4.12, 26.28), controlPoint2: CGPointMake(3.3, 25.31))
        bezier2Path.addCurveToPoint(CGPointMake(5.14, 21.95), controlPoint1: CGPointMake(3.3, 22.92), controlPoint2: CGPointMake(4.12, 21.95))
        bezier2Path.addCurveToPoint(CGPointMake(5.2, 21.96), controlPoint1: CGPointMake(5.16, 21.95), controlPoint2: CGPointMake(5.18, 21.96))
        bezier2Path.addCurveToPoint(CGPointMake(6.17, 15.99), controlPoint1: CGPointMake(5.21, 20.27), controlPoint2: CGPointMake(5.56, 17.6))
        bezier2Path.addCurveToPoint(CGPointMake(9.99, 18.21), controlPoint1: CGPointMake(6.97, 17.14), controlPoint2: CGPointMake(8.19, 18.21))
        bezier2Path.addLineToPoint(CGPointMake(9.99, 18.21))
        bezier2Path.addCurveToPoint(CGPointMake(10.25, 18.2), controlPoint1: CGPointMake(10.08, 18.21), controlPoint2: CGPointMake(10.16, 18.21))
        bezier2Path.addCurveToPoint(CGPointMake(10.61, 17.92), controlPoint1: CGPointMake(10.42, 18.2), controlPoint2: CGPointMake(10.56, 18.08))
        bezier2Path.addCurveToPoint(CGPointMake(16.08, 13.16), controlPoint1: CGPointMake(10.63, 17.88), controlPoint2: CGPointMake(12.13, 13.58))
        bezier2Path.addCurveToPoint(CGPointMake(14.71, 17.66), controlPoint1: CGPointMake(16.25, 14), controlPoint2: CGPointMake(16.5, 16.28))
        bezier2Path.addCurveToPoint(CGPointMake(14.56, 18.1), controlPoint1: CGPointMake(14.58, 17.76), controlPoint2: CGPointMake(14.52, 17.93))
        bezier2Path.addCurveToPoint(CGPointMake(14.9, 18.41), controlPoint1: CGPointMake(14.6, 18.26), controlPoint2: CGPointMake(14.73, 18.39))
        bezier2Path.addCurveToPoint(CGPointMake(16.97, 18.54), controlPoint1: CGPointMake(14.93, 18.41), controlPoint2: CGPointMake(15.75, 18.54))
        bezier2Path.addCurveToPoint(CGPointMake(25.28, 15.62), controlPoint1: CGPointMake(19.05, 18.54), controlPoint2: CGPointMake(22.82, 18.15))
        bezier2Path.addCurveToPoint(CGPointMake(26.08, 18.97), controlPoint1: CGPointMake(25.69, 16.04), controlPoint2: CGPointMake(26.42, 17.09))
        bezier2Path.addCurveToPoint(CGPointMake(26.28, 19.41), controlPoint1: CGPointMake(26.05, 19.15), controlPoint2: CGPointMake(26.13, 19.33))
        bezier2Path.addCurveToPoint(CGPointMake(26.49, 19.47), controlPoint1: CGPointMake(26.34, 19.45), controlPoint2: CGPointMake(26.41, 19.47))
        bezier2Path.addCurveToPoint(CGPointMake(26.75, 19.37), controlPoint1: CGPointMake(26.58, 19.47), controlPoint2: CGPointMake(26.68, 19.43))
        bezier2Path.addCurveToPoint(CGPointMake(29.44, 16.44), controlPoint1: CGPointMake(26.84, 19.29), controlPoint2: CGPointMake(28.37, 17.94))
        bezier2Path.addCurveToPoint(CGPointMake(30.26, 21.95), controlPoint1: CGPointMake(29.96, 18.06), controlPoint2: CGPointMake(30.25, 20.41))
        bezier2Path.addLineToPoint(CGPointMake(30.26, 21.95))
        bezier2Path.addCurveToPoint(CGPointMake(32.11, 24.11), controlPoint1: CGPointMake(31.29, 21.95), controlPoint2: CGPointMake(32.11, 22.92))
        bezier2Path.addCurveToPoint(CGPointMake(30.26, 26.28), controlPoint1: CGPointMake(32.11, 25.31), controlPoint2: CGPointMake(31.29, 26.28))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(19.47, 27.52))
        bezier2Path.addCurveToPoint(CGPointMake(19.47, 26.39), controlPoint1: CGPointMake(20.44, 27.21), controlPoint2: CGPointMake(20.44, 26.7))
        bezier2Path.addCurveToPoint(CGPointMake(15.93, 26.39), controlPoint1: CGPointMake(18.49, 26.07), controlPoint2: CGPointMake(16.91, 26.07))
        bezier2Path.addCurveToPoint(CGPointMake(15.93, 27.52), controlPoint1: CGPointMake(14.96, 26.7), controlPoint2: CGPointMake(14.96, 27.21))
        bezier2Path.addCurveToPoint(CGPointMake(19.47, 27.52), controlPoint1: CGPointMake(16.91, 27.83), controlPoint2: CGPointMake(18.49, 27.83))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(13.55, 23.05))
        bezier2Path.addCurveToPoint(CGPointMake(11.75, 21.25), controlPoint1: CGPointMake(13.55, 22.06), controlPoint2: CGPointMake(12.74, 21.25))
        bezier2Path.addCurveToPoint(CGPointMake(9.95, 23.05), controlPoint1: CGPointMake(10.76, 21.25), controlPoint2: CGPointMake(9.95, 22.06))
        bezier2Path.addCurveToPoint(CGPointMake(11.75, 24.85), controlPoint1: CGPointMake(9.95, 24.05), controlPoint2: CGPointMake(10.76, 24.85))
        bezier2Path.addCurveToPoint(CGPointMake(13.55, 23.05), controlPoint1: CGPointMake(12.74, 24.85), controlPoint2: CGPointMake(13.55, 24.05))
        bezier2Path.closePath()
        bezier2Path.moveToPoint(CGPointMake(26.45, 23.05))
        bezier2Path.addCurveToPoint(CGPointMake(24.65, 21.25), controlPoint1: CGPointMake(26.45, 22.06), controlPoint2: CGPointMake(25.64, 21.25))
        bezier2Path.addCurveToPoint(CGPointMake(22.85, 23.05), controlPoint1: CGPointMake(23.66, 21.25), controlPoint2: CGPointMake(22.85, 22.06))
        bezier2Path.addCurveToPoint(CGPointMake(24.65, 24.85), controlPoint1: CGPointMake(22.85, 24.05), controlPoint2: CGPointMake(23.66, 24.85))
        bezier2Path.addCurveToPoint(CGPointMake(26.45, 23.05), controlPoint1: CGPointMake(25.64, 24.85), controlPoint2: CGPointMake(26.45, 24.05))
        bezier2Path.closePath()
        AssetsKit.maleIconFill.setFill()
        bezier2Path.fill()
        AssetsKit.iconUntapped.setStroke()
        bezier2Path.lineWidth = 0
        bezier2Path.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawCakeIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0, 0.6)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(40, 32.7))
        bezierPath.addCurveToPoint(CGPointMake(40.09, 32.2), controlPoint1: CGPointMake(40.06, 32.54), controlPoint2: CGPointMake(40.09, 32.37))
        bezierPath.addLineToPoint(CGPointMake(40.09, 16.68))
        bezierPath.addCurveToPoint(CGPointMake(38.74, 15.33), controlPoint1: CGPointMake(40.09, 15.94), controlPoint2: CGPointMake(39.49, 15.33))
        bezierPath.addLineToPoint(CGPointMake(25.62, 15.33))
        bezierPath.addLineToPoint(CGPointMake(25.62, 7.68))
        bezierPath.addLineToPoint(CGPointMake(25.29, 7.6))
        bezierPath.addCurveToPoint(CGPointMake(23.36, 7.23), controlPoint1: CGPointMake(25.05, 7.55), controlPoint2: CGPointMake(24.24, 7.37))
        bezierPath.addCurveToPoint(CGPointMake(23.38, 6.89), controlPoint1: CGPointMake(23.36, 7.13), controlPoint2: CGPointMake(23.37, 7.02))
        bezierPath.addCurveToPoint(CGPointMake(23.58, 6.95), controlPoint1: CGPointMake(23.45, 6.91), controlPoint2: CGPointMake(23.51, 6.93))
        bezierPath.addCurveToPoint(CGPointMake(23.86, 6.97), controlPoint1: CGPointMake(23.67, 6.96), controlPoint2: CGPointMake(23.76, 6.97))
        bezierPath.addCurveToPoint(CGPointMake(25.31, 6.34), controlPoint1: CGPointMake(24.39, 6.97), controlPoint2: CGPointMake(24.98, 6.72))
        bezierPath.addCurveToPoint(CGPointMake(25.38, 4.08), controlPoint1: CGPointMake(25.88, 5.6), controlPoint2: CGPointMake(25.55, 4.61))
        bezierPath.addCurveToPoint(CGPointMake(22.91, 0.11), controlPoint1: CGPointMake(24.95, 2.81), controlPoint2: CGPointMake(23.97, 1.03))
        bezierPath.addCurveToPoint(CGPointMake(22.45, 0.04), controlPoint1: CGPointMake(22.79, -0), controlPoint2: CGPointMake(22.6, -0.03))
        bezierPath.addCurveToPoint(CGPointMake(22.2, 0.43), controlPoint1: CGPointMake(22.3, 0.11), controlPoint2: CGPointMake(22.2, 0.26))
        bezierPath.addCurveToPoint(CGPointMake(22.03, 2.01), controlPoint1: CGPointMake(22.2, 0.93), controlPoint2: CGPointMake(22.14, 1.43))
        bezierPath.addCurveToPoint(CGPointMake(21.52, 3.01), controlPoint1: CGPointMake(21.93, 2.43), controlPoint2: CGPointMake(21.75, 2.7))
        bezierPath.addCurveToPoint(CGPointMake(21.1, 3.66), controlPoint1: CGPointMake(21.39, 3.19), controlPoint2: CGPointMake(21.25, 3.39))
        bezierPath.addCurveToPoint(CGPointMake(21.86, 6.36), controlPoint1: CGPointMake(20.43, 5), controlPoint2: CGPointMake(21.26, 5.79))
        bezierPath.addCurveToPoint(CGPointMake(22.46, 6.99), controlPoint1: CGPointMake(22.07, 6.56), controlPoint2: CGPointMake(22.3, 6.77))
        bezierPath.addCurveToPoint(CGPointMake(22.51, 7.05), controlPoint1: CGPointMake(22.48, 7.01), controlPoint2: CGPointMake(22.5, 7.03))
        bezierPath.addCurveToPoint(CGPointMake(22.51, 7.11), controlPoint1: CGPointMake(22.51, 7.07), controlPoint2: CGPointMake(22.51, 7.09))
        bezierPath.addCurveToPoint(CGPointMake(21.54, 7.05), controlPoint1: CGPointMake(22.13, 7.07), controlPoint2: CGPointMake(21.8, 7.05))
        bezierPath.addCurveToPoint(CGPointMake(20.4, 7.5), controlPoint1: CGPointMake(21.1, 7.05), controlPoint2: CGPointMake(20.58, 7.1))
        bezierPath.addCurveToPoint(CGPointMake(20.58, 8.26), controlPoint1: CGPointMake(20.34, 7.64), controlPoint2: CGPointMake(20.28, 7.93))
        bezierPath.addCurveToPoint(CGPointMake(20.52, 14.57), controlPoint1: CGPointMake(20.68, 8.47), controlPoint2: CGPointMake(20.74, 9.75))
        bezierPath.addCurveToPoint(CGPointMake(20.48, 15.33), controlPoint1: CGPointMake(20.5, 14.9), controlPoint2: CGPointMake(20.49, 15.14))
        bezierPath.addLineToPoint(CGPointMake(6.86, 15.33))
        bezierPath.addCurveToPoint(CGPointMake(5.5, 16.68), controlPoint1: CGPointMake(6.11, 15.33), controlPoint2: CGPointMake(5.5, 15.94))
        bezierPath.addLineToPoint(CGPointMake(5.5, 32.2))
        bezierPath.addCurveToPoint(CGPointMake(5.6, 32.7), controlPoint1: CGPointMake(5.5, 32.37), controlPoint2: CGPointMake(5.54, 32.54))
        bezierPath.addLineToPoint(CGPointMake(0, 32.7))
        bezierPath.addLineToPoint(CGPointMake(1.63, 35.31))
        bezierPath.addLineToPoint(CGPointMake(1.69, 35.4))
        bezierPath.addLineToPoint(CGPointMake(42.9, 35.4))
        bezierPath.addLineToPoint(CGPointMake(44.92, 32.7))
        bezierPath.addLineToPoint(CGPointMake(40, 32.7))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(23.61, 5.8))
        bezierPath.addCurveToPoint(CGPointMake(23.62, 3.03), controlPoint1: CGPointMake(23.85, 4.77), controlPoint2: CGPointMake(24.1, 3.7))
        bezierPath.addLineToPoint(CGPointMake(23.51, 2.87))
        bezierPath.addLineToPoint(CGPointMake(22.82, 3.36))
        bezierPath.addLineToPoint(CGPointMake(22.93, 3.52))
        bezierPath.addCurveToPoint(CGPointMake(22.77, 5.6), controlPoint1: CGPointMake(23.18, 3.88), controlPoint2: CGPointMake(22.95, 4.88))
        bezierPath.addLineToPoint(CGPointMake(22.76, 5.66))
        bezierPath.addCurveToPoint(CGPointMake(22.69, 5.97), controlPoint1: CGPointMake(22.73, 5.77), controlPoint2: CGPointMake(22.71, 5.87))
        bezierPath.addCurveToPoint(CGPointMake(22.44, 5.73), controlPoint1: CGPointMake(22.61, 5.89), controlPoint2: CGPointMake(22.53, 5.82))
        bezierPath.addCurveToPoint(CGPointMake(21.86, 4.06), controlPoint1: CGPointMake(21.84, 5.16), controlPoint2: CGPointMake(21.48, 4.82))
        bezierPath.addCurveToPoint(CGPointMake(22.22, 3.49), controlPoint1: CGPointMake(21.96, 3.86), controlPoint2: CGPointMake(22.08, 3.69))
        bezierPath.addCurveToPoint(CGPointMake(22.86, 2.19), controlPoint1: CGPointMake(22.48, 3.13), controlPoint2: CGPointMake(22.72, 2.79))
        bezierPath.addCurveToPoint(CGPointMake(22.99, 1.43), controlPoint1: CGPointMake(22.91, 1.93), controlPoint2: CGPointMake(22.96, 1.68))
        bezierPath.addCurveToPoint(CGPointMake(24.57, 4.35), controlPoint1: CGPointMake(23.71, 2.35), controlPoint2: CGPointMake(24.3, 3.53))
        bezierPath.addCurveToPoint(CGPointMake(24.65, 5.8), controlPoint1: CGPointMake(24.74, 4.88), controlPoint2: CGPointMake(24.91, 5.47))
        bezierPath.addCurveToPoint(CGPointMake(23.74, 6.11), controlPoint1: CGPointMake(24.47, 6), controlPoint2: CGPointMake(24.04, 6.16))
        bezierPath.addCurveToPoint(CGPointMake(23.57, 5.99), controlPoint1: CGPointMake(23.6, 6.08), controlPoint2: CGPointMake(23.57, 6.02))
        bezierPath.addCurveToPoint(CGPointMake(23.56, 5.98), controlPoint1: CGPointMake(23.56, 5.98), controlPoint2: CGPointMake(23.56, 5.98))
        bezierPath.addLineToPoint(CGPointMake(23.61, 5.8))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(23.15, 8.43))
        bezierPath.addLineToPoint(CGPointMake(23.37, 8.09))
        bezierPath.addCurveToPoint(CGPointMake(24.77, 8.36), controlPoint1: CGPointMake(23.94, 8.19), controlPoint2: CGPointMake(24.46, 8.3))
        bezierPath.addLineToPoint(CGPointMake(24.77, 15.18))
        bezierPath.addLineToPoint(CGPointMake(21.34, 15.18))
        bezierPath.addLineToPoint(CGPointMake(21.37, 14.61))
        bezierPath.addCurveToPoint(CGPointMake(21.35, 7.91), controlPoint1: CGPointMake(21.57, 10.15), controlPoint2: CGPointMake(21.57, 8.48))
        bezierPath.addCurveToPoint(CGPointMake(22.69, 7.99), controlPoint1: CGPointMake(21.65, 7.88), controlPoint2: CGPointMake(22.1, 7.91))
        bezierPath.addCurveToPoint(CGPointMake(22.99, 8.32), controlPoint1: CGPointMake(22.77, 8.13), controlPoint2: CGPointMake(22.86, 8.24))
        bezierPath.addLineToPoint(CGPointMake(23.15, 8.43))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(12.5, 23.92))
        bezierPath.addCurveToPoint(CGPointMake(13.31, 23.97), controlPoint1: CGPointMake(12.77, 23.95), controlPoint2: CGPointMake(13.05, 23.97))
        bezierPath.addCurveToPoint(CGPointMake(19.15, 18.71), controlPoint1: CGPointMake(16.6, 23.97), controlPoint2: CGPointMake(18.11, 21.32))
        bezierPath.addCurveToPoint(CGPointMake(21.3, 20.43), controlPoint1: CGPointMake(19.93, 19), controlPoint2: CGPointMake(20.59, 19.69))
        bezierPath.addCurveToPoint(CGPointMake(24.7, 22.81), controlPoint1: CGPointMake(22.24, 21.41), controlPoint2: CGPointMake(23.22, 22.43))
        bezierPath.addCurveToPoint(CGPointMake(25.67, 22.93), controlPoint1: CGPointMake(25.05, 22.89), controlPoint2: CGPointMake(25.37, 22.93))
        bezierPath.addCurveToPoint(CGPointMake(28.74, 19.7), controlPoint1: CGPointMake(27.73, 22.93), controlPoint2: CGPointMake(28.31, 21.07))
        bezierPath.addCurveToPoint(CGPointMake(29.35, 18.36), controlPoint1: CGPointMake(28.92, 19.12), controlPoint2: CGPointMake(29.12, 18.47))
        bezierPath.addCurveToPoint(CGPointMake(30.87, 20.12), controlPoint1: CGPointMake(29.64, 18.36), controlPoint2: CGPointMake(30.46, 19.54))
        bezierPath.addCurveToPoint(CGPointMake(34.76, 23.69), controlPoint1: CGPointMake(31.89, 21.59), controlPoint2: CGPointMake(33.18, 23.43))
        bezierPath.addCurveToPoint(CGPointMake(37.47, 23.23), controlPoint1: CGPointMake(35.73, 23.92), controlPoint2: CGPointMake(36.66, 23.76))
        bezierPath.addCurveToPoint(CGPointMake(39.24, 21.09), controlPoint1: CGPointMake(38.18, 22.77), controlPoint2: CGPointMake(38.77, 22.05))
        bezierPath.addLineToPoint(CGPointMake(39.24, 32.2))
        bezierPath.addCurveToPoint(CGPointMake(38.74, 32.7), controlPoint1: CGPointMake(39.24, 32.47), controlPoint2: CGPointMake(39.02, 32.7))
        bezierPath.addLineToPoint(CGPointMake(6.86, 32.7))
        bezierPath.addCurveToPoint(CGPointMake(6.36, 32.2), controlPoint1: CGPointMake(6.58, 32.7), controlPoint2: CGPointMake(6.36, 32.47))
        bezierPath.addLineToPoint(CGPointMake(6.36, 18.98))
        bezierPath.addCurveToPoint(CGPointMake(8.07, 20.77), controlPoint1: CGPointMake(6.98, 19.47), controlPoint2: CGPointMake(7.51, 20.1))
        bezierPath.addCurveToPoint(CGPointMake(12.5, 23.92), controlPoint1: CGPointMake(9.21, 22.11), controlPoint2: CGPointMake(10.38, 23.49))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(37, 22.52))
        bezierPath.addCurveToPoint(CGPointMake(34.93, 22.86), controlPoint1: CGPointMake(36.38, 22.93), controlPoint2: CGPointMake(35.72, 23.04))
        bezierPath.addCurveToPoint(CGPointMake(31.56, 19.63), controlPoint1: CGPointMake(33.66, 22.64), controlPoint2: CGPointMake(32.5, 20.97))
        bezierPath.addCurveToPoint(CGPointMake(29.35, 17.5), controlPoint1: CGPointMake(30.73, 18.44), controlPoint2: CGPointMake(30.08, 17.5))
        bezierPath.addCurveToPoint(CGPointMake(28.99, 17.59), controlPoint1: CGPointMake(29.23, 17.5), controlPoint2: CGPointMake(29.11, 17.53))
        bezierPath.addCurveToPoint(CGPointMake(27.92, 19.46), controlPoint1: CGPointMake(28.42, 17.86), controlPoint2: CGPointMake(28.19, 18.6))
        bezierPath.addCurveToPoint(CGPointMake(25.65, 22.07), controlPoint1: CGPointMake(27.52, 20.75), controlPoint2: CGPointMake(27.11, 22.07))
        bezierPath.addCurveToPoint(CGPointMake(24.9, 21.98), controlPoint1: CGPointMake(25.42, 22.07), controlPoint2: CGPointMake(25.17, 22.04))
        bezierPath.addCurveToPoint(CGPointMake(21.91, 19.83), controlPoint1: CGPointMake(23.67, 21.67), controlPoint2: CGPointMake(22.78, 20.74))
        bezierPath.addCurveToPoint(CGPointMake(18.98, 17.78), controlPoint1: CGPointMake(21.02, 18.9), controlPoint2: CGPointMake(20.17, 18.02))
        bezierPath.addLineToPoint(CGPointMake(18.62, 17.71))
        bezierPath.addLineToPoint(CGPointMake(18.49, 18.04))
        bezierPath.addCurveToPoint(CGPointMake(13.29, 23.12), controlPoint1: CGPointMake(17.49, 20.68), controlPoint2: CGPointMake(16.16, 23.12))
        bezierPath.addCurveToPoint(CGPointMake(12.64, 23.08), controlPoint1: CGPointMake(13.07, 23.12), controlPoint2: CGPointMake(12.85, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(8.72, 20.22), controlPoint1: CGPointMake(10.84, 22.72), controlPoint2: CGPointMake(9.76, 21.45))
        bezierPath.addCurveToPoint(CGPointMake(6.36, 17.95), controlPoint1: CGPointMake(8.06, 19.43), controlPoint2: CGPointMake(7.3, 18.54))
        bezierPath.addLineToPoint(CGPointMake(6.36, 16.68))
        bezierPath.addCurveToPoint(CGPointMake(6.86, 16.18), controlPoint1: CGPointMake(6.36, 16.41), controlPoint2: CGPointMake(6.58, 16.18))
        bezierPath.addLineToPoint(CGPointMake(20.67, 16.18))
        bezierPath.addLineToPoint(CGPointMake(20.72, 16.23))
        bezierPath.addLineToPoint(CGPointMake(20.91, 16.23))
        bezierPath.addCurveToPoint(CGPointMake(21.11, 16.18), controlPoint1: CGPointMake(20.98, 16.23), controlPoint2: CGPointMake(21.05, 16.22))
        bezierPath.addLineToPoint(CGPointMake(38.74, 16.18))
        bezierPath.addCurveToPoint(CGPointMake(39.24, 16.68), controlPoint1: CGPointMake(39.02, 16.18), controlPoint2: CGPointMake(39.24, 16.41))
        bezierPath.addLineToPoint(CGPointMake(39.25, 18.36))
        bezierPath.addCurveToPoint(CGPointMake(37, 22.52), controlPoint1: CGPointMake(38.98, 19.83), controlPoint2: CGPointMake(38.25, 21.7))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(2.16, 34.55))
        bezierPath.addLineToPoint(CGPointMake(1.54, 33.55))
        bezierPath.addLineToPoint(CGPointMake(43.22, 33.55))
        bezierPath.addLineToPoint(CGPointMake(42.47, 34.55))
        bezierPath.addLineToPoint(CGPointMake(2.16, 34.55))
        bezierPath.closePath()
        AssetsKit.femaleIconFill.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawFlameIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 1, -0)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(8.45, 34))
        bezierPath.addCurveToPoint(CGPointMake(9.14, 24.04), controlPoint1: CGPointMake(6.14, 29.28), controlPoint2: CGPointMake(7.37, 26.58))
        bezierPath.addCurveToPoint(CGPointMake(11.58, 18.49), controlPoint1: CGPointMake(11.08, 21.25), controlPoint2: CGPointMake(11.58, 18.49))
        bezierPath.addCurveToPoint(CGPointMake(12.49, 23.49), controlPoint1: CGPointMake(11.58, 18.49), controlPoint2: CGPointMake(13.1, 20.44))
        bezierPath.addCurveToPoint(CGPointMake(15.28, 14.04), controlPoint1: CGPointMake(15.18, 20.54), controlPoint2: CGPointMake(15.69, 15.84))
        bezierPath.addCurveToPoint(CGPointMake(20.46, 34), controlPoint1: CGPointMake(21.37, 18.23), controlPoint2: CGPointMake(23.97, 27.29))
        bezierPath.addCurveToPoint(CGPointMake(22.66, 6.35), controlPoint1: CGPointMake(39.1, 23.62), controlPoint2: CGPointMake(25.1, 8.1))
        bezierPath.addCurveToPoint(CGPointMake(21.99, 12.49), controlPoint1: CGPointMake(23.48, 8.1), controlPoint2: CGPointMake(23.63, 11.06))
        bezierPath.addCurveToPoint(CGPointMake(12.34, 0), controlPoint1: CGPointMake(19.21, 2.12), controlPoint2: CGPointMake(12.34, 0))
        bezierPath.addCurveToPoint(CGPointMake(5.77, 15.56), controlPoint1: CGPointMake(13.15, 5.35), controlPoint2: CGPointMake(9.39, 11.19))
        bezierPath.addCurveToPoint(CGPointMake(4.37, 9.92), controlPoint1: CGPointMake(5.64, 13.43), controlPoint2: CGPointMake(5.51, 11.96))
        bezierPath.addCurveToPoint(CGPointMake(0.29, 20.83), controlPoint1: CGPointMake(4.11, 13.79), controlPoint2: CGPointMake(1.1, 16.95))
        bezierPath.addCurveToPoint(CGPointMake(8.45, 34), controlPoint1: CGPointMake(-0.82, 26.09), controlPoint2: CGPointMake(1.11, 29.93))
        bezierPath.closePath()
        bezierPath.miterLimit = 4;

        AssetsKit.flameColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawCarIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(24.5, 17.52))
        bezierPath.addCurveToPoint(CGPointMake(22.14, 15.16), controlPoint1: CGPointMake(23.2, 17.52), controlPoint2: CGPointMake(22.14, 16.46))
        bezierPath.addCurveToPoint(CGPointMake(24.5, 12.8), controlPoint1: CGPointMake(22.14, 13.86), controlPoint2: CGPointMake(23.2, 12.8))
        bezierPath.addCurveToPoint(CGPointMake(26.87, 15.16), controlPoint1: CGPointMake(25.81, 12.8), controlPoint2: CGPointMake(26.87, 13.86))
        bezierPath.addCurveToPoint(CGPointMake(24.5, 17.52), controlPoint1: CGPointMake(26.87, 16.46), controlPoint2: CGPointMake(25.81, 17.52))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(4.41, 15.16))
        bezierPath.addCurveToPoint(CGPointMake(6.77, 12.8), controlPoint1: CGPointMake(4.41, 13.86), controlPoint2: CGPointMake(5.47, 12.8))
        bezierPath.addCurveToPoint(CGPointMake(9.13, 15.16), controlPoint1: CGPointMake(8.07, 12.8), controlPoint2: CGPointMake(9.13, 13.86))
        bezierPath.addCurveToPoint(CGPointMake(6.77, 17.52), controlPoint1: CGPointMake(9.13, 16.46), controlPoint2: CGPointMake(8.07, 17.52))
        bezierPath.addCurveToPoint(CGPointMake(4.41, 15.16), controlPoint1: CGPointMake(5.47, 17.52), controlPoint2: CGPointMake(4.41, 16.46))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(8, 4.9))
        bezierPath.addCurveToPoint(CGPointMake(23.24, 4.9), controlPoint1: CGPointMake(11.06, 2.89), controlPoint2: CGPointMake(20.18, 2.89))
        bezierPath.addCurveToPoint(CGPointMake(25.3, 8.81), controlPoint1: CGPointMake(23.84, 5.29), controlPoint2: CGPointMake(24.61, 6.87))
        bezierPath.addLineToPoint(CGPointMake(5.94, 8.81))
        bezierPath.addCurveToPoint(CGPointMake(8, 4.9), controlPoint1: CGPointMake(6.64, 6.87), controlPoint2: CGPointMake(7.4, 5.29))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(29.03, 11.33))
        bezierPath.addCurveToPoint(CGPointMake(24.57, 2.9), controlPoint1: CGPointMake(28.28, 9.35), controlPoint2: CGPointMake(25.68, 3.63))
        bezierPath.addCurveToPoint(CGPointMake(6.68, 2.9), controlPoint1: CGPointMake(20.72, 0.37), controlPoint2: CGPointMake(10.52, 0.37))
        bezierPath.addCurveToPoint(CGPointMake(2.15, 11.33), controlPoint1: CGPointMake(5.57, 3.63), controlPoint2: CGPointMake(2.91, 9.35))
        bezierPath.moveToPoint(CGPointMake(2.15, 11.33))
        bezierPath.addCurveToPoint(CGPointMake(0.85, 14.86), controlPoint1: CGPointMake(1.28, 12.33), controlPoint2: CGPointMake(0.86, 13.6))
        bezierPath.addCurveToPoint(CGPointMake(2.53, 18.83), controlPoint1: CGPointMake(0.85, 16.42), controlPoint2: CGPointMake(1.44, 17.83))
        bezierPath.addCurveToPoint(CGPointMake(2.56, 18.86), controlPoint1: CGPointMake(2.54, 18.84), controlPoint2: CGPointMake(2.55, 18.85))
        bezierPath.addLineToPoint(CGPointMake(2.56, 21.91))
        bezierPath.addCurveToPoint(CGPointMake(3.76, 23.11), controlPoint1: CGPointMake(2.56, 22.57), controlPoint2: CGPointMake(3.1, 23.11))
        bezierPath.addLineToPoint(CGPointMake(6.57, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(7.77, 21.91), controlPoint1: CGPointMake(7.23, 23.11), controlPoint2: CGPointMake(7.77, 22.57))
        bezierPath.addLineToPoint(CGPointMake(7.77, 20.69))
        bezierPath.addLineToPoint(CGPointMake(23.48, 20.69))
        bezierPath.addLineToPoint(CGPointMake(23.48, 21.91))
        bezierPath.addCurveToPoint(CGPointMake(24.68, 23.11), controlPoint1: CGPointMake(23.48, 22.57), controlPoint2: CGPointMake(24.02, 23.11))
        bezierPath.addLineToPoint(CGPointMake(27.48, 23.11))
        bezierPath.addCurveToPoint(CGPointMake(28.68, 21.91), controlPoint1: CGPointMake(28.14, 23.11), controlPoint2: CGPointMake(28.68, 22.57))
        bezierPath.addLineToPoint(CGPointMake(28.68, 18.92))
        bezierPath.addCurveToPoint(CGPointMake(30.39, 14.97), controlPoint1: CGPointMake(29.83, 17.87), controlPoint2: CGPointMake(30.38, 16.42))
        bezierPath.addCurveToPoint(CGPointMake(29.03, 11.33), controlPoint1: CGPointMake(30.39, 13.66), controlPoint2: CGPointMake(29.95, 12.35))
        AssetsKit.carIconColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawEtcIcon(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0, 11.5)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(8.89, 4.5))
        bezierPath.addCurveToPoint(CGPointMake(4.44, 0), controlPoint1: CGPointMake(8.89, 2.01), controlPoint2: CGPointMake(6.9, 0))
        bezierPath.addCurveToPoint(CGPointMake(0, 4.5), controlPoint1: CGPointMake(1.99, -0), controlPoint2: CGPointMake(0, 2.01))
        bezierPath.addCurveToPoint(CGPointMake(4.44, 9), controlPoint1: CGPointMake(-0, 6.99), controlPoint2: CGPointMake(1.99, 9))
        bezierPath.addCurveToPoint(CGPointMake(8.89, 4.5), controlPoint1: CGPointMake(6.9, 9), controlPoint2: CGPointMake(8.89, 6.99))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(20.27, 4.5))
        bezierPath.addCurveToPoint(CGPointMake(15.82, 0), controlPoint1: CGPointMake(20.27, 2.01), controlPoint2: CGPointMake(18.28, 0))
        bezierPath.addCurveToPoint(CGPointMake(11.38, 4.5), controlPoint1: CGPointMake(13.37, -0), controlPoint2: CGPointMake(11.38, 2.01))
        bezierPath.addCurveToPoint(CGPointMake(15.82, 9), controlPoint1: CGPointMake(11.38, 6.99), controlPoint2: CGPointMake(13.37, 9))
        bezierPath.addCurveToPoint(CGPointMake(20.27, 4.5), controlPoint1: CGPointMake(18.28, 9), controlPoint2: CGPointMake(20.27, 6.99))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(32, 4.5))
        bezierPath.addCurveToPoint(CGPointMake(27.56, 0), controlPoint1: CGPointMake(32, 2.01), controlPoint2: CGPointMake(30.01, 0))
        bezierPath.addCurveToPoint(CGPointMake(23.11, 4.5), controlPoint1: CGPointMake(25.1, -0), controlPoint2: CGPointMake(23.11, 2.01))
        bezierPath.addCurveToPoint(CGPointMake(27.56, 9), controlPoint1: CGPointMake(23.11, 6.99), controlPoint2: CGPointMake(25.1, 9))
        bezierPath.addCurveToPoint(CGPointMake(32, 4.5), controlPoint1: CGPointMake(30.01, 9), controlPoint2: CGPointMake(32, 6.99))
        bezierPath.closePath()
        AssetsKit.etcColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawWTGButtonTapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0, 41.93))
        bezierPath.addCurveToPoint(CGPointMake(5.01, 32.63), controlPoint1: CGPointMake(0, 38.62), controlPoint2: CGPointMake(2.24, 34.44))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 0), controlPoint1: CGPointMake(5.01, 32.63), controlPoint2: CGPointMake(53.51, 0))
        bezierPath.addCurveToPoint(CGPointMake(129.99, 32.63), controlPoint1: CGPointMake(81.49, 0), controlPoint2: CGPointMake(129.99, 32.63))
        bezierPath.addCurveToPoint(CGPointMake(135, 41.93), controlPoint1: CGPointMake(132.76, 34.45), controlPoint2: CGPointMake(135, 38.62))
        bezierPath.addLineToPoint(CGPointMake(135, 103.27))
        bezierPath.addCurveToPoint(CGPointMake(129.91, 112.44), controlPoint1: CGPointMake(135, 106.59), controlPoint2: CGPointMake(132.73, 110.69))
        bezierPath.addCurveToPoint(CGPointMake(67.5, 144.39), controlPoint1: CGPointMake(129.91, 112.44), controlPoint2: CGPointMake(79.35, 144.39))
        bezierPath.addCurveToPoint(CGPointMake(5.09, 112.44), controlPoint1: CGPointMake(55.65, 144.39), controlPoint2: CGPointMake(5.09, 112.44))
        bezierPath.addCurveToPoint(CGPointMake(0, 103.27), controlPoint1: CGPointMake(2.28, 110.69), controlPoint2: CGPointMake(0, 106.59))
        bezierPath.addLineToPoint(CGPointMake(0, 41.93))
        bezierPath.closePath()
        AssetsKit.themeColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)


        //// Text Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        let textRect = CGRectMake(23, 23, 89, 92)
        var textTextContent = NSString(string: "来 ")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Center

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "Helvetica", size: 80)!, NSForegroundColorAttributeName: UIColor.whiteColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)
    }

    public class func drawWTGButtonUntapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Text Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        let textRect = CGRectMake(23, 23, 89, 92)
        var textTextContent = NSString(string: "来")
        let textStyle = NSParagraphStyle.defaultParagraphStyle().mutableCopy() as! NSMutableParagraphStyle
        textStyle.alignment = NSTextAlignment.Center

        let textFontAttributes = [NSFontAttributeName: UIFont(name: "Helvetica", size: 80)!, NSForegroundColorAttributeName: AssetsKit.themeColor, NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = textTextContent.boundingRectWithSize(CGSizeMake(textRect.width, CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect);
        textTextContent.drawInRect(CGRectMake(textRect.minX, textRect.minY + (textRect.height - textTextHeight) / 2, textRect.width, textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)

        CGContextRestoreGState(context)


        //// Bezier 3 Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        var bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(68, 11))
        bezier3Path.addCurveToPoint(CGPointMake(15.23, 38.8), controlPoint1: CGPointMake(56.18, 11), controlPoint2: CGPointMake(15.23, 38.8))
        bezier3Path.addCurveToPoint(CGPointMake(11, 46.72), controlPoint1: CGPointMake(12.89, 40.34), controlPoint2: CGPointMake(11, 43.9))
        bezier3Path.addLineToPoint(CGPointMake(11, 98.97))
        bezier3Path.addCurveToPoint(CGPointMake(15.3, 106.78), controlPoint1: CGPointMake(11, 101.8), controlPoint2: CGPointMake(12.92, 105.29))
        bezier3Path.addCurveToPoint(CGPointMake(68, 134), controlPoint1: CGPointMake(15.3, 106.78), controlPoint2: CGPointMake(57.99, 134))
        bezier3Path.addCurveToPoint(CGPointMake(120.7, 106.78), controlPoint1: CGPointMake(78.01, 134), controlPoint2: CGPointMake(120.7, 106.78))
        bezier3Path.addCurveToPoint(CGPointMake(125, 98.97), controlPoint1: CGPointMake(123.08, 105.3), controlPoint2: CGPointMake(125, 101.8))
        bezier3Path.addLineToPoint(CGPointMake(125, 46.72))
        bezier3Path.addCurveToPoint(CGPointMake(120.77, 38.8), controlPoint1: CGPointMake(125, 43.9), controlPoint2: CGPointMake(123.11, 40.35))
        bezier3Path.addCurveToPoint(CGPointMake(68, 11), controlPoint1: CGPointMake(120.77, 38.8), controlPoint2: CGPointMake(79.82, 11))
        bezier3Path.closePath()
        bezier3Path.moveToPoint(CGPointMake(129.96, 32.61))
        bezier3Path.addCurveToPoint(CGPointMake(135, 41.93), controlPoint1: CGPointMake(132.76, 34.45), controlPoint2: CGPointMake(135, 38.62))
        bezier3Path.addLineToPoint(CGPointMake(135, 103.27))
        bezier3Path.addCurveToPoint(CGPointMake(129.91, 112.44), controlPoint1: CGPointMake(135, 106.59), controlPoint2: CGPointMake(132.73, 110.69))
        bezier3Path.addCurveToPoint(CGPointMake(67.5, 144.39), controlPoint1: CGPointMake(129.91, 112.44), controlPoint2: CGPointMake(79.35, 144.39))
        bezier3Path.addCurveToPoint(CGPointMake(5.09, 112.44), controlPoint1: CGPointMake(55.65, 144.39), controlPoint2: CGPointMake(5.09, 112.44))
        bezier3Path.addCurveToPoint(CGPointMake(0, 103.27), controlPoint1: CGPointMake(2.28, 110.69), controlPoint2: CGPointMake(0, 106.59))
        bezier3Path.addLineToPoint(CGPointMake(0, 41.93))
        bezier3Path.addCurveToPoint(CGPointMake(5.01, 32.63), controlPoint1: CGPointMake(0, 38.62), controlPoint2: CGPointMake(2.24, 34.44))
        bezier3Path.addCurveToPoint(CGPointMake(67.5, 0), controlPoint1: CGPointMake(5.01, 32.63), controlPoint2: CGPointMake(53.51, 0))
        bezier3Path.addCurveToPoint(CGPointMake(129.99, 32.63), controlPoint1: CGPointMake(81.49, 0), controlPoint2: CGPointMake(129.99, 32.63))
        bezier3Path.addLineToPoint(CGPointMake(129.96, 32.61))
        bezier3Path.closePath()
        AssetsKit.themeColor.setFill()
        bezier3Path.fill()

        CGContextRestoreGState(context)
    }

    public class func drawPriceTagBackground(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Rectangle Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        var rectanglePath = UIBezierPath()
        rectanglePath.moveToPoint(CGPointMake(0, 23))
        rectanglePath.addLineToPoint(CGPointMake(39.64, 23))
        rectanglePath.addLineToPoint(CGPointMake(47, 12.11))
        rectanglePath.addLineToPoint(CGPointMake(39.64, -0))
        rectanglePath.addLineToPoint(CGPointMake(0, -0))
        rectanglePath.addLineToPoint(CGPointMake(0, 23))
        rectanglePath.closePath()
        AssetsKit.priceTagColor.setFill()
        rectanglePath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawHomeButtonTapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0, 1.83)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(12, 6.17))
        bezierPath.addCurveToPoint(CGPointMake(11.41, 6.24), controlPoint1: CGPointMake(11.8, 6.17), controlPoint2: CGPointMake(11.6, 6.2))
        bezierPath.addCurveToPoint(CGPointMake(9.5, 8.67), controlPoint1: CGPointMake(10.32, 6.51), controlPoint2: CGPointMake(9.5, 7.5))
        bezierPath.addCurveToPoint(CGPointMake(12, 11.17), controlPoint1: CGPointMake(9.5, 10.06), controlPoint2: CGPointMake(10.62, 11.17))
        bezierPath.addCurveToPoint(CGPointMake(14.5, 8.67), controlPoint1: CGPointMake(13.38, 11.17), controlPoint2: CGPointMake(14.5, 10.06))
        bezierPath.addCurveToPoint(CGPointMake(12, 6.17), controlPoint1: CGPointMake(14.5, 7.29), controlPoint2: CGPointMake(13.38, 6.17))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(13.41, 0.59))
        bezierPath.addLineToPoint(CGPointMake(15.05, 2.23))
        bezierPath.addCurveToPoint(CGPointMake(17, 0.67), controlPoint1: CGPointMake(15.26, 1.33), controlPoint2: CGPointMake(16.05, 0.67))
        bezierPath.addCurveToPoint(CGPointMake(19, 2.67), controlPoint1: CGPointMake(18.11, 0.67), controlPoint2: CGPointMake(19, 1.57))
        bezierPath.addLineToPoint(CGPointMake(19, 6.17))
        bezierPath.addLineToPoint(CGPointMake(24, 11.17))
        bezierPath.addLineToPoint(CGPointMake(22, 11.17))
        bezierPath.addLineToPoint(CGPointMake(22, 22.17))
        bezierPath.addLineToPoint(CGPointMake(14.5, 22.17))
        bezierPath.addLineToPoint(CGPointMake(14.5, 16.17))
        bezierPath.addCurveToPoint(CGPointMake(12.5, 14.17), controlPoint1: CGPointMake(14.5, 15.07), controlPoint2: CGPointMake(13.61, 14.17))
        bezierPath.addLineToPoint(CGPointMake(11.5, 14.17))
        bezierPath.addCurveToPoint(CGPointMake(9.5, 16.17), controlPoint1: CGPointMake(10.4, 14.17), controlPoint2: CGPointMake(9.5, 15.06))
        bezierPath.addLineToPoint(CGPointMake(9.5, 22.17))
        bezierPath.addLineToPoint(CGPointMake(2, 22.17))
        bezierPath.addLineToPoint(CGPointMake(2, 11.17))
        bezierPath.addLineToPoint(CGPointMake(0, 11.17))
        bezierPath.addCurveToPoint(CGPointMake(8.17, 3), controlPoint1: CGPointMake(0, 11.17), controlPoint2: CGPointMake(5.05, 6.13))
        bezierPath.addCurveToPoint(CGPointMake(10.59, 0.59), controlPoint1: CGPointMake(9.57, 1.6), controlPoint2: CGPointMake(10.59, 0.59))
        bezierPath.addCurveToPoint(CGPointMake(13.41, 0.59), controlPoint1: CGPointMake(11.37, -0.2), controlPoint2: CGPointMake(12.63, -0.19))
        bezierPath.closePath()
        AssetsKit.themeColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawHomeButtonUntapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0, 0.83)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(12, 6.17))
        bezierPath.addCurveToPoint(CGPointMake(11.18, 6.31), controlPoint1: CGPointMake(11.71, 6.17), controlPoint2: CGPointMake(11.44, 6.22))
        bezierPath.addCurveToPoint(CGPointMake(9.5, 8.67), controlPoint1: CGPointMake(10.2, 6.65), controlPoint2: CGPointMake(9.5, 7.58))
        bezierPath.addCurveToPoint(CGPointMake(12, 11.17), controlPoint1: CGPointMake(9.5, 10.06), controlPoint2: CGPointMake(10.62, 11.17))
        bezierPath.addCurveToPoint(CGPointMake(14.5, 8.67), controlPoint1: CGPointMake(13.38, 11.17), controlPoint2: CGPointMake(14.5, 10.06))
        bezierPath.addCurveToPoint(CGPointMake(12, 6.17), controlPoint1: CGPointMake(14.5, 7.29), controlPoint2: CGPointMake(13.38, 6.17))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(13.41, 0.59))
        bezierPath.addLineToPoint(CGPointMake(15.05, 2.23))
        bezierPath.addCurveToPoint(CGPointMake(17, 0.67), controlPoint1: CGPointMake(15.26, 1.33), controlPoint2: CGPointMake(16.05, 0.67))
        bezierPath.addCurveToPoint(CGPointMake(19, 2.67), controlPoint1: CGPointMake(18.11, 0.67), controlPoint2: CGPointMake(19, 1.57))
        bezierPath.addLineToPoint(CGPointMake(19, 6.17))
        bezierPath.addLineToPoint(CGPointMake(24, 11.17))
        bezierPath.addLineToPoint(CGPointMake(22, 11.17))
        bezierPath.addLineToPoint(CGPointMake(22, 22.17))
        bezierPath.addLineToPoint(CGPointMake(14.5, 22.17))
        bezierPath.addLineToPoint(CGPointMake(14.5, 16.17))
        bezierPath.addCurveToPoint(CGPointMake(12.5, 14.17), controlPoint1: CGPointMake(14.5, 15.07), controlPoint2: CGPointMake(13.61, 14.17))
        bezierPath.addLineToPoint(CGPointMake(11.5, 14.17))
        bezierPath.addCurveToPoint(CGPointMake(9.5, 16.17), controlPoint1: CGPointMake(10.4, 14.17), controlPoint2: CGPointMake(9.5, 15.06))
        bezierPath.addLineToPoint(CGPointMake(9.5, 22.17))
        bezierPath.addLineToPoint(CGPointMake(2, 22.17))
        bezierPath.addLineToPoint(CGPointMake(2, 11.17))
        bezierPath.addLineToPoint(CGPointMake(0, 11.17))
        bezierPath.addCurveToPoint(CGPointMake(7.76, 3.41), controlPoint1: CGPointMake(0, 11.17), controlPoint2: CGPointMake(4.63, 6.55))
        bezierPath.addCurveToPoint(CGPointMake(10.59, 0.59), controlPoint1: CGPointMake(9.37, 1.8), controlPoint2: CGPointMake(10.59, 0.59))
        bezierPath.addCurveToPoint(CGPointMake(13.41, 0.59), controlPoint1: CGPointMake(11.37, -0.2), controlPoint2: CGPointMake(12.63, -0.19))
        bezierPath.closePath()
        AssetsKit.bottomBarButtonUntapped.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawNearbyButtonTapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(5.54, 5.29))
        bezierPath.addLineToPoint(CGPointMake(5.5, 5.32))
        bezierPath.addCurveToPoint(CGPointMake(5.39, 9.28), controlPoint1: CGPointMake(4.36, 6.39), controlPoint2: CGPointMake(4.31, 8.16))
        bezierPath.addCurveToPoint(CGPointMake(9.42, 9.4), controlPoint1: CGPointMake(6.47, 10.41), controlPoint2: CGPointMake(8.28, 10.46))
        bezierPath.addCurveToPoint(CGPointMake(9.53, 5.44), controlPoint1: CGPointMake(10.56, 8.33), controlPoint2: CGPointMake(10.61, 6.56))
        bezierPath.addCurveToPoint(CGPointMake(5.54, 5.29), controlPoint1: CGPointMake(8.46, 4.33), controlPoint2: CGPointMake(6.68, 4.26))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(14.92, 7.34))
        bezierPath.addCurveToPoint(CGPointMake(7.87, 20.17), controlPoint1: CGPointMake(14.92, 12.02), controlPoint2: CGPointMake(8.15, 19.84))
        bezierPath.addLineToPoint(CGPointMake(7.46, 20.64))
        bezierPath.addLineToPoint(CGPointMake(7.05, 20.17))
        bezierPath.addCurveToPoint(CGPointMake(0, 7.34), controlPoint1: CGPointMake(6.76, 19.84), controlPoint2: CGPointMake(0, 12.02))
        bezierPath.addCurveToPoint(CGPointMake(1.17, 3.4), controlPoint1: CGPointMake(0, 5.89), controlPoint2: CGPointMake(0.43, 4.54))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 0), controlPoint1: CGPointMake(2.49, 1.36), controlPoint2: CGPointMake(4.82, 0))
        bezierPath.addCurveToPoint(CGPointMake(14.92, 7.34), controlPoint1: CGPointMake(11.57, 0), controlPoint2: CGPointMake(14.92, 3.29))
        bezierPath.closePath()
        AssetsKit.themeColor.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawNearbyButtonUntapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0.04, 0.04)
        CGContextScaleCTM(context, scale, scale)

        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(7.46, 20.64))
        bezierPath.addLineToPoint(CGPointMake(7.05, 20.17))
        bezierPath.addCurveToPoint(CGPointMake(0, 7.34), controlPoint1: CGPointMake(6.76, 19.84), controlPoint2: CGPointMake(0, 12.02))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 0), controlPoint1: CGPointMake(0, 3.29), controlPoint2: CGPointMake(3.35, 0))
        bezierPath.addCurveToPoint(CGPointMake(14.92, 7.34), controlPoint1: CGPointMake(11.57, 0), controlPoint2: CGPointMake(14.92, 3.29))
        bezierPath.addCurveToPoint(CGPointMake(7.87, 20.17), controlPoint1: CGPointMake(14.92, 12.02), controlPoint2: CGPointMake(8.15, 19.84))
        bezierPath.addLineToPoint(CGPointMake(7.46, 20.64))
        bezierPath.addLineToPoint(CGPointMake(7.46, 20.64))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(7.46, 1.06))
        bezierPath.addCurveToPoint(CGPointMake(1.07, 7.34), controlPoint1: CGPointMake(3.94, 1.06), controlPoint2: CGPointMake(1.07, 3.87))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 19), controlPoint1: CGPointMake(1.07, 11.01), controlPoint2: CGPointMake(5.99, 17.23))
        bezierPath.addCurveToPoint(CGPointMake(13.85, 7.34), controlPoint1: CGPointMake(8.93, 17.23), controlPoint2: CGPointMake(13.85, 11.01))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 1.06), controlPoint1: CGPointMake(13.85, 3.87), controlPoint2: CGPointMake(10.98, 1.06))
        bezierPath.addLineToPoint(CGPointMake(7.46, 1.06))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(7.46, 10.14))
        bezierPath.addCurveToPoint(CGPointMake(4.62, 7.34), controlPoint1: CGPointMake(5.89, 10.14), controlPoint2: CGPointMake(4.62, 8.88))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 4.54), controlPoint1: CGPointMake(4.62, 5.8), controlPoint2: CGPointMake(5.89, 4.54))
        bezierPath.addCurveToPoint(CGPointMake(10.3, 7.34), controlPoint1: CGPointMake(9.03, 4.54), controlPoint2: CGPointMake(10.3, 5.8))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 10.14), controlPoint1: CGPointMake(10.3, 8.88), controlPoint2: CGPointMake(9.03, 10.14))
        bezierPath.addLineToPoint(CGPointMake(7.46, 10.14))
        bezierPath.closePath()
        bezierPath.moveToPoint(CGPointMake(7.46, 5.6))
        bezierPath.addCurveToPoint(CGPointMake(5.69, 7.34), controlPoint1: CGPointMake(6.48, 5.6), controlPoint2: CGPointMake(5.69, 6.38))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 9.08), controlPoint1: CGPointMake(5.69, 8.3), controlPoint2: CGPointMake(6.48, 9.08))
        bezierPath.addCurveToPoint(CGPointMake(9.23, 7.34), controlPoint1: CGPointMake(8.44, 9.08), controlPoint2: CGPointMake(9.23, 8.3))
        bezierPath.addCurveToPoint(CGPointMake(7.46, 5.6), controlPoint1: CGPointMake(9.23, 6.38), controlPoint2: CGPointMake(8.44, 5.6))
        bezierPath.addLineToPoint(CGPointMake(7.46, 5.6))
        bezierPath.closePath()
        AssetsKit.bottomBarButtonUntapped.setFill()
        bezierPath.fill()

        CGContextRestoreGState(context)
    }

    public class func drawChatButtonTapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Fill-59 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0.5, -0.03)
        CGContextScaleCTM(context, scale, scale)

        var fill59Path = UIBezierPath()
        fill59Path.moveToPoint(CGPointMake(4.3, 19.98))
        fill59Path.addLineToPoint(CGPointMake(3.18, 19.98))
        fill59Path.addLineToPoint(CGPointMake(3.84, 19.07))
        fill59Path.addCurveToPoint(CGPointMake(4.84, 16.37), controlPoint1: CGPointMake(4.34, 18.37), controlPoint2: CGPointMake(4.67, 17.49))
        fill59Path.addCurveToPoint(CGPointMake(0, 8.74), controlPoint1: CGPointMake(1.71, 14.96), controlPoint2: CGPointMake(0, 12.27))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 0), controlPoint1: CGPointMake(0, 3.35), controlPoint2: CGPointMake(4.03, 0))
        fill59Path.addCurveToPoint(CGPointMake(21.04, 8.74), controlPoint1: CGPointMake(17.01, 0), controlPoint2: CGPointMake(21.04, 3.35))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 17.47), controlPoint1: CGPointMake(21.04, 14.21), controlPoint2: CGPointMake(17.11, 17.47))
        fill59Path.addCurveToPoint(CGPointMake(10.08, 17.46), controlPoint1: CGPointMake(10.37, 17.47), controlPoint2: CGPointMake(10.23, 17.47))
        fill59Path.addCurveToPoint(CGPointMake(4.3, 19.98), controlPoint1: CGPointMake(9.1, 18.66), controlPoint2: CGPointMake(7.32, 19.98))
        fill59Path.addLineToPoint(CGPointMake(4.3, 19.98))
        fill59Path.closePath()
        fill59Path.miterLimit = 4;

        fill59Path.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        fill59Path.fill()

        CGContextRestoreGState(context)
    }

    public class func drawChatButtonUntapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Fill-59 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0.5, -0.03)
        CGContextScaleCTM(context, scale, scale)

        var fill59Path = UIBezierPath()
        fill59Path.moveToPoint(CGPointMake(4.3, 19.98))
        fill59Path.addLineToPoint(CGPointMake(3.18, 19.98))
        fill59Path.addLineToPoint(CGPointMake(3.84, 19.07))
        fill59Path.addCurveToPoint(CGPointMake(4.84, 16.37), controlPoint1: CGPointMake(4.34, 18.37), controlPoint2: CGPointMake(4.67, 17.49))
        fill59Path.addCurveToPoint(CGPointMake(0, 8.74), controlPoint1: CGPointMake(1.71, 14.96), controlPoint2: CGPointMake(0, 12.27))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 0), controlPoint1: CGPointMake(0, 3.35), controlPoint2: CGPointMake(4.03, 0))
        fill59Path.addCurveToPoint(CGPointMake(21.04, 8.74), controlPoint1: CGPointMake(17.01, 0), controlPoint2: CGPointMake(21.04, 3.35))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 17.47), controlPoint1: CGPointMake(21.04, 14.21), controlPoint2: CGPointMake(17.11, 17.47))
        fill59Path.addCurveToPoint(CGPointMake(10.08, 17.46), controlPoint1: CGPointMake(10.37, 17.47), controlPoint2: CGPointMake(10.23, 17.47))
        fill59Path.addCurveToPoint(CGPointMake(4.3, 19.98), controlPoint1: CGPointMake(9.1, 18.66), controlPoint2: CGPointMake(7.32, 19.98))
        fill59Path.addLineToPoint(CGPointMake(4.3, 19.98))
        fill59Path.closePath()
        fill59Path.moveToPoint(CGPointMake(10.52, 1.14))
        fill59Path.addCurveToPoint(CGPointMake(1.15, 8.76), controlPoint1: CGPointMake(4.65, 1.14), controlPoint2: CGPointMake(1.15, 3.99))
        fill59Path.addCurveToPoint(CGPointMake(5.67, 15.53), controlPoint1: CGPointMake(1.15, 12.86), controlPoint2: CGPointMake(3.61, 14.7))
        fill59Path.addLineToPoint(CGPointMake(6.08, 15.7))
        fill59Path.addLineToPoint(CGPointMake(6.03, 16.14))
        fill59Path.addCurveToPoint(CGPointMake(5.33, 18.84), controlPoint1: CGPointMake(5.92, 17.18), controlPoint2: CGPointMake(5.69, 18.08))
        fill59Path.addCurveToPoint(CGPointMake(9.36, 16.59), controlPoint1: CGPointMake(7.45, 18.58), controlPoint2: CGPointMake(8.68, 17.51))
        fill59Path.addLineToPoint(CGPointMake(9.54, 16.35))
        fill59Path.addLineToPoint(CGPointMake(9.92, 16.37))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 16.38), controlPoint1: CGPointMake(10.12, 16.37), controlPoint2: CGPointMake(10.32, 16.38))
        fill59Path.addCurveToPoint(CGPointMake(19.9, 8.76), controlPoint1: CGPointMake(18.98, 16.38), controlPoint2: CGPointMake(19.9, 11.05))
        fill59Path.addCurveToPoint(CGPointMake(10.52, 1.14), controlPoint1: CGPointMake(19.9, 3.99), controlPoint2: CGPointMake(16.39, 1.14))
        fill59Path.addLineToPoint(CGPointMake(10.52, 1.14))
        fill59Path.closePath()
        fill59Path.miterLimit = 4;

        fill59Path.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        fill59Path.fill()

        CGContextRestoreGState(context)
    }

    public class func drawProfileButtonTapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Filled Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0.8, 0.5)
        CGContextScaleCTM(context, scale, scale)

        var filledPath = UIBezierPath()
        filledPath.moveToPoint(CGPointMake(6.98, 10.06))
        filledPath.addCurveToPoint(CGPointMake(12.05, 5.03), controlPoint1: CGPointMake(9.77, 10.06), controlPoint2: CGPointMake(12.05, 7.8))
        filledPath.addCurveToPoint(CGPointMake(6.98, 0), controlPoint1: CGPointMake(12.05, 2.26), controlPoint2: CGPointMake(9.77, 0))
        filledPath.addCurveToPoint(CGPointMake(1.91, 5.03), controlPoint1: CGPointMake(4.18, 0), controlPoint2: CGPointMake(1.91, 2.26))
        filledPath.addCurveToPoint(CGPointMake(6.98, 10.06), controlPoint1: CGPointMake(1.91, 7.8), controlPoint2: CGPointMake(4.18, 10.06))
        filledPath.closePath()
        filledPath.moveToPoint(CGPointMake(12.22, 12.69))
        filledPath.addCurveToPoint(CGPointMake(8.06, 10.8), controlPoint1: CGPointMake(10.91, 10.52), controlPoint2: CGPointMake(8.14, 10.79))
        filledPath.addLineToPoint(CGPointMake(5.81, 10.8))
        filledPath.addCurveToPoint(CGPointMake(2.17, 12.61), controlPoint1: CGPointMake(5.71, 10.8), controlPoint2: CGPointMake(3.48, 10.74))
        filledPath.addCurveToPoint(CGPointMake(0.01, 19.25), controlPoint1: CGPointMake(1.45, 13.64), controlPoint2: CGPointMake(0.38, 17.6))
        filledPath.addCurveToPoint(CGPointMake(0.28, 19.67), controlPoint1: CGPointMake(-0.04, 19.44), controlPoint2: CGPointMake(0.09, 19.63))
        filledPath.addCurveToPoint(CGPointMake(14.16, 19.68), controlPoint1: CGPointMake(0.48, 19.72), controlPoint2: CGPointMake(13.99, 19.68))
        filledPath.addCurveToPoint(CGPointMake(14.51, 19.25), controlPoint1: CGPointMake(14.19, 19.68), controlPoint2: CGPointMake(14.56, 19.44))
        filledPath.addCurveToPoint(CGPointMake(12.22, 12.69), controlPoint1: CGPointMake(14.19, 17.87), controlPoint2: CGPointMake(13.06, 13.78))
        filledPath.closePath()
        filledPath.miterLimit = 4;

        filledPath.usesEvenOddFillRule = true;

        AssetsKit.themeColor.setFill()
        filledPath.fill()
        AssetsKit.themeColor.setStroke()
        filledPath.lineWidth = 0.5
        filledPath.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawProfileButtonUntapped(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Unfilled Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0.8, 0.5)
        CGContextScaleCTM(context, scale, scale)

        var unfilledPath = UIBezierPath()
        unfilledPath.moveToPoint(CGPointMake(6.98, 10.06))
        unfilledPath.addCurveToPoint(CGPointMake(12.05, 5.03), controlPoint1: CGPointMake(9.77, 10.06), controlPoint2: CGPointMake(12.05, 7.8))
        unfilledPath.addCurveToPoint(CGPointMake(6.98, 0), controlPoint1: CGPointMake(12.05, 2.26), controlPoint2: CGPointMake(9.77, 0))
        unfilledPath.addCurveToPoint(CGPointMake(1.91, 5.03), controlPoint1: CGPointMake(4.18, 0), controlPoint2: CGPointMake(1.91, 2.26))
        unfilledPath.addCurveToPoint(CGPointMake(6.98, 10.06), controlPoint1: CGPointMake(1.91, 7.8), controlPoint2: CGPointMake(4.18, 10.06))
        unfilledPath.addLineToPoint(CGPointMake(6.98, 10.06))
        unfilledPath.closePath()
        unfilledPath.moveToPoint(CGPointMake(6.98, 0.72))
        unfilledPath.addCurveToPoint(CGPointMake(11.33, 5.03), controlPoint1: CGPointMake(9.38, 0.72), controlPoint2: CGPointMake(11.33, 2.65))
        unfilledPath.addCurveToPoint(CGPointMake(6.98, 9.34), controlPoint1: CGPointMake(11.33, 7.41), controlPoint2: CGPointMake(9.38, 9.34))
        unfilledPath.addCurveToPoint(CGPointMake(2.63, 5.03), controlPoint1: CGPointMake(4.58, 9.34), controlPoint2: CGPointMake(2.63, 7.41))
        unfilledPath.addCurveToPoint(CGPointMake(6.98, 0.72), controlPoint1: CGPointMake(2.63, 2.65), controlPoint2: CGPointMake(4.58, 0.72))
        unfilledPath.addLineToPoint(CGPointMake(6.98, 0.72))
        unfilledPath.closePath()
        unfilledPath.moveToPoint(CGPointMake(14.51, 19.25))
        unfilledPath.addCurveToPoint(CGPointMake(12.22, 12.69), controlPoint1: CGPointMake(14.19, 17.87), controlPoint2: CGPointMake(13.06, 13.78))
        unfilledPath.addCurveToPoint(CGPointMake(8.06, 10.8), controlPoint1: CGPointMake(10.91, 10.52), controlPoint2: CGPointMake(8.14, 10.79))
        unfilledPath.addLineToPoint(CGPointMake(5.81, 10.8))
        unfilledPath.addCurveToPoint(CGPointMake(2.17, 12.61), controlPoint1: CGPointMake(5.71, 10.8), controlPoint2: CGPointMake(3.48, 10.74))
        unfilledPath.addCurveToPoint(CGPointMake(0.01, 19.25), controlPoint1: CGPointMake(1.45, 13.64), controlPoint2: CGPointMake(0.38, 17.6))
        unfilledPath.addCurveToPoint(CGPointMake(0.28, 19.67), controlPoint1: CGPointMake(-0.04, 19.44), controlPoint2: CGPointMake(0.09, 19.63))
        unfilledPath.addCurveToPoint(CGPointMake(0.71, 19.4), controlPoint1: CGPointMake(0.48, 19.72), controlPoint2: CGPointMake(0.67, 19.6))
        unfilledPath.addCurveToPoint(CGPointMake(2.77, 13.01), controlPoint1: CGPointMake(1.11, 17.67), controlPoint2: CGPointMake(2.15, 13.9))
        unfilledPath.addCurveToPoint(CGPointMake(5.79, 11.52), controlPoint1: CGPointMake(3.84, 11.48), controlPoint2: CGPointMake(5.77, 11.52))
        unfilledPath.addLineToPoint(CGPointMake(8.1, 11.51))
        unfilledPath.addCurveToPoint(CGPointMake(11.61, 13.08), controlPoint1: CGPointMake(8.13, 11.51), controlPoint2: CGPointMake(10.54, 11.28))
        unfilledPath.addCurveToPoint(CGPointMake(11.64, 13.12), controlPoint1: CGPointMake(11.62, 13.09), controlPoint2: CGPointMake(11.63, 13.11))
        unfilledPath.addCurveToPoint(CGPointMake(13.81, 19.41), controlPoint1: CGPointMake(12.3, 13.94), controlPoint2: CGPointMake(13.4, 17.65))
        unfilledPath.addCurveToPoint(CGPointMake(14.16, 19.68), controlPoint1: CGPointMake(13.85, 19.57), controlPoint2: CGPointMake(13.99, 19.68))
        unfilledPath.addCurveToPoint(CGPointMake(14.24, 19.67), controlPoint1: CGPointMake(14.19, 19.68), controlPoint2: CGPointMake(14.21, 19.68))
        unfilledPath.addCurveToPoint(CGPointMake(14.51, 19.25), controlPoint1: CGPointMake(14.43, 19.63), controlPoint2: CGPointMake(14.56, 19.44))
        unfilledPath.addLineToPoint(CGPointMake(14.51, 19.25))
        unfilledPath.closePath()
        unfilledPath.miterLimit = 4;

        unfilledPath.usesEvenOddFillRule = true;

        AssetsKit.bottomBarButtonUntapped.setFill()
        unfilledPath.fill()
        AssetsKit.bottomBarButtonUntapped.setStroke()
        unfilledPath.lineWidth = 0.5
        unfilledPath.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawNavBarSearchButton(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Fill-139 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 1.2, 1.5)
        CGContextScaleCTM(context, scale, scale)

        var fill139Path = UIBezierPath()
        fill139Path.moveToPoint(CGPointMake(17.79, 17.46))
        fill139Path.addLineToPoint(CGPointMake(11.44, 11.11))
        fill139Path.addCurveToPoint(CGPointMake(13.22, 6.61), controlPoint1: CGPointMake(12.54, 9.93), controlPoint2: CGPointMake(13.22, 8.35))
        fill139Path.addCurveToPoint(CGPointMake(6.61, 0), controlPoint1: CGPointMake(13.22, 2.97), controlPoint2: CGPointMake(10.26, 0))
        fill139Path.addCurveToPoint(CGPointMake(0, 6.61), controlPoint1: CGPointMake(2.97, 0), controlPoint2: CGPointMake(0, 2.97))
        fill139Path.addCurveToPoint(CGPointMake(6.61, 13.22), controlPoint1: CGPointMake(0, 10.26), controlPoint2: CGPointMake(2.97, 13.22))
        fill139Path.addCurveToPoint(CGPointMake(10.99, 11.55), controlPoint1: CGPointMake(8.29, 13.22), controlPoint2: CGPointMake(9.82, 12.59))
        fill139Path.addLineToPoint(CGPointMake(17.35, 17.91))
        fill139Path.addCurveToPoint(CGPointMake(17.57, 18), controlPoint1: CGPointMake(17.41, 17.97), controlPoint2: CGPointMake(17.49, 18))
        fill139Path.addCurveToPoint(CGPointMake(17.79, 17.91), controlPoint1: CGPointMake(17.65, 18), controlPoint2: CGPointMake(17.73, 17.97))
        fill139Path.addCurveToPoint(CGPointMake(17.79, 17.46), controlPoint1: CGPointMake(17.92, 17.78), controlPoint2: CGPointMake(17.92, 17.58))
        fill139Path.addLineToPoint(CGPointMake(17.79, 17.46))
        fill139Path.closePath()
        fill139Path.moveToPoint(CGPointMake(6.61, 12.59))
        fill139Path.addCurveToPoint(CGPointMake(0.63, 6.61), controlPoint1: CGPointMake(3.31, 12.59), controlPoint2: CGPointMake(0.63, 9.91))
        fill139Path.addCurveToPoint(CGPointMake(6.61, 0.63), controlPoint1: CGPointMake(0.63, 3.31), controlPoint2: CGPointMake(3.31, 0.63))
        fill139Path.addCurveToPoint(CGPointMake(12.59, 6.61), controlPoint1: CGPointMake(9.91, 0.63), controlPoint2: CGPointMake(12.59, 3.31))
        fill139Path.addCurveToPoint(CGPointMake(6.61, 12.59), controlPoint1: CGPointMake(12.59, 9.91), controlPoint2: CGPointMake(9.91, 12.59))
        fill139Path.addLineToPoint(CGPointMake(6.61, 12.59))
        fill139Path.closePath()
        fill139Path.miterLimit = 4;

        fill139Path.usesEvenOddFillRule = true;

        AssetsKit.iconUntapped.setFill()
        fill139Path.fill()
        AssetsKit.iconUntapped.setStroke()
        fill139Path.lineWidth = 1
        fill139Path.stroke()

        CGContextRestoreGState(context)
    }

    public class func drawNavbarFilterButton(#scale: CGFloat) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Fill-1 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 0, 0.52)
        CGContextScaleCTM(context, scale, scale)

        var fill1Path = UIBezierPath()
        fill1Path.moveToPoint(CGPointMake(9.99, 0))
        fill1Path.addCurveToPoint(CGPointMake(0, 3.11), controlPoint1: CGPointMake(4.47, 0), controlPoint2: CGPointMake(0, 1.39))
        fill1Path.addLineToPoint(CGPointMake(0, 4.98))
        fill1Path.addLineToPoint(CGPointMake(7.49, 12.46))
        fill1Path.addLineToPoint(CGPointMake(7.49, 18.69))
        fill1Path.addCurveToPoint(CGPointMake(9.99, 19.93), controlPoint1: CGPointMake(7.49, 19.37), controlPoint2: CGPointMake(8.61, 19.93))
        fill1Path.addCurveToPoint(CGPointMake(12.49, 18.69), controlPoint1: CGPointMake(11.37, 19.93), controlPoint2: CGPointMake(12.49, 19.37))
        fill1Path.addLineToPoint(CGPointMake(12.49, 12.46))
        fill1Path.addLineToPoint(CGPointMake(19.98, 4.98))
        fill1Path.addLineToPoint(CGPointMake(19.98, 3.11))
        fill1Path.addCurveToPoint(CGPointMake(9.99, 0), controlPoint1: CGPointMake(19.98, 1.39), controlPoint2: CGPointMake(15.51, 0))
        fill1Path.addLineToPoint(CGPointMake(9.99, 0))
        fill1Path.closePath()
        fill1Path.moveToPoint(CGPointMake(3.74, 2.48))
        fill1Path.addCurveToPoint(CGPointMake(9.98, 1.54), controlPoint1: CGPointMake(5.45, 1.87), controlPoint2: CGPointMake(7.67, 1.54))
        fill1Path.addCurveToPoint(CGPointMake(16.23, 2.48), controlPoint1: CGPointMake(12.29, 1.54), controlPoint2: CGPointMake(14.51, 1.87))
        fill1Path.addCurveToPoint(CGPointMake(18.12, 3.42), controlPoint1: CGPointMake(17, 2.75), controlPoint2: CGPointMake(17.66, 3.08))
        fill1Path.addCurveToPoint(CGPointMake(18.67, 3.96), controlPoint1: CGPointMake(18.43, 3.65), controlPoint2: CGPointMake(18.6, 3.84))
        fill1Path.addCurveToPoint(CGPointMake(18.12, 4.49), controlPoint1: CGPointMake(18.6, 4.07), controlPoint2: CGPointMake(18.43, 4.27))
        fill1Path.addCurveToPoint(CGPointMake(16.23, 5.44), controlPoint1: CGPointMake(17.66, 4.84), controlPoint2: CGPointMake(17, 5.16))
        fill1Path.addCurveToPoint(CGPointMake(9.98, 6.38), controlPoint1: CGPointMake(14.51, 6.05), controlPoint2: CGPointMake(12.29, 6.38))
        fill1Path.addCurveToPoint(CGPointMake(3.74, 5.44), controlPoint1: CGPointMake(7.67, 6.38), controlPoint2: CGPointMake(5.45, 6.05))
        fill1Path.addCurveToPoint(CGPointMake(1.84, 4.49), controlPoint1: CGPointMake(2.96, 5.16), controlPoint2: CGPointMake(2.31, 4.84))
        fill1Path.addCurveToPoint(CGPointMake(1.29, 3.96), controlPoint1: CGPointMake(1.53, 4.27), controlPoint2: CGPointMake(1.37, 4.07))
        fill1Path.addCurveToPoint(CGPointMake(1.84, 3.42), controlPoint1: CGPointMake(1.37, 3.84), controlPoint2: CGPointMake(1.53, 3.65))
        fill1Path.addCurveToPoint(CGPointMake(3.74, 2.48), controlPoint1: CGPointMake(1.84, 3.42), controlPoint2: CGPointMake(2.96, 2.75))
        fill1Path.closePath()
        fill1Path.miterLimit = 4;

        fill1Path.usesEvenOddFillRule = true;

        AssetsKit.iconUntapped.setFill()
        fill1Path.fill()

        CGContextRestoreGState(context)
    }

    //// Generated Images

    public class func imageOfFemaleIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(36, 40), false, 0)
            AssetsKit.drawFemaleIcon(scale: scale)

        let imageOfFemaleIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfFemaleIcon
    }

    public class func imageOfMaleIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(37, 40), false, 0)
            AssetsKit.drawMaleIcon(scale: scale)

        let imageOfMaleIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfMaleIcon
    }

    public class func imageOfCakeIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(45, 36), false, 0)
            AssetsKit.drawCakeIcon(scale: scale)

        let imageOfCakeIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfCakeIcon
    }

    public class func imageOfFlameIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(32, 34), false, 0)
            AssetsKit.drawFlameIcon(scale: scale)

        let imageOfFlameIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfFlameIcon
    }

    public class func imageOfCarIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(31, 24), false, 0)
            AssetsKit.drawCarIcon(scale: scale)

        let imageOfCarIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfCarIcon
    }

    public class func imageOfEtcIcon(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(32, 32), false, 0)
            AssetsKit.drawEtcIcon(scale: scale)

        let imageOfEtcIcon = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfEtcIcon
    }

    public class func imageOfWTGButtonTapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(135, 145), false, 0)
            AssetsKit.drawWTGButtonTapped(scale: scale)

        let imageOfWTGButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfWTGButtonTapped
    }

    public class func imageOfWTGButtonUntapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(135, 145), false, 0)
            AssetsKit.drawWTGButtonUntapped(scale: scale)

        let imageOfWTGButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfWTGButtonUntapped
    }

    public class func imageOfPriceTagBackground(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(47, 23), false, 0)
            AssetsKit.drawPriceTagBackground(scale: scale)

        let imageOfPriceTagBackground = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfPriceTagBackground
    }

    public class func imageOfHomeButtonTapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(24, 24), false, 0)
            AssetsKit.drawHomeButtonTapped(scale: scale)

        let imageOfHomeButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfHomeButtonTapped
    }

    public class func imageOfHomeButtonUntapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(24, 23), false, 0)
            AssetsKit.drawHomeButtonUntapped(scale: scale)

        let imageOfHomeButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfHomeButtonUntapped
    }

    public class func imageOfNearbyButtonTapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(15, 21), false, 0)
            AssetsKit.drawNearbyButtonTapped(scale: scale)

        let imageOfNearbyButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfNearbyButtonTapped
    }

    public class func imageOfNearbyButtonUntapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(15, 21), false, 0)
            AssetsKit.drawNearbyButtonUntapped(scale: scale)

        let imageOfNearbyButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfNearbyButtonUntapped
    }

    public class func imageOfChatButtonTapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(22, 20), false, 0)
            AssetsKit.drawChatButtonTapped(scale: scale)

        let imageOfChatButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfChatButtonTapped
    }

    public class func imageOfChatButtonUntapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(22, 20), false, 0)
            AssetsKit.drawChatButtonUntapped(scale: scale)

        let imageOfChatButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfChatButtonUntapped
    }

    public class func imageOfProfileButtonTapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 21), false, 0)
            AssetsKit.drawProfileButtonTapped(scale: scale)

        let imageOfProfileButtonTapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfProfileButtonTapped
    }

    public class func imageOfProfileButtonUntapped(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(16, 21), false, 0)
            AssetsKit.drawProfileButtonUntapped(scale: scale)

        let imageOfProfileButtonUntapped = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfProfileButtonUntapped
    }

    public class func imageOfNavBarSearchButton(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(20, 21), false, 0)
            AssetsKit.drawNavBarSearchButton(scale: scale)

        let imageOfNavBarSearchButton = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfNavBarSearchButton
    }

    public class func imageOfNavbarFilterButton(#scale: CGFloat) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(20, 21), false, 0)
            AssetsKit.drawNavbarFilterButton(scale: scale)

        let imageOfNavbarFilterButton = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfNavbarFilterButton
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
